{"version":3,"file":"jsstore.js","sourceRoot":"","sources":["../License.ts","../KeyStore/UtilsLogic.ts","../KeyStore/CommonLogic.ts","../KeyStore/Helper.ts","../KeyStore/Business/BaseLogic.ts","../KeyStore/Business/GetLogic.ts","../KeyStore/Business/SetLogic.ts","../KeyStore/Business/RemoveLogic.ts","../KeyStore/Business/InitDbLogic.ts","../KeyStore/Business/MainLogic.ts","../KeyStore/KeyStoreInstance.ts","../JsStore/enums.ts","../JsStore/interfaces.ts","../JsStore/CommonLogic.ts","../JsStore/UtilsLogic.ts","../JsStore/HelperLogic.ts","../JsStore/Error.ts","../JsStore/Model/Column.ts","../JsStore/Model/Table.ts","../JsStore/Model/TableHelper.ts","../JsStore/Model/DbHelper.ts","../JsStore/Model/DataBase.ts","../JsStore/Business/BaseHelperLogic.ts","../JsStore/Business/BaseLogic.ts","../JsStore/Business/CreateDbLogic.ts","../JsStore/Business/DropDbLogic.ts","../JsStore/Business/BulkInsertLogic.ts","../JsStore/Business/OpenDbLogic.ts","../JsStore/Business/ClearLogic.ts","../JsStore/Business/MainLogic.ts","../JsStore/Business/WhereChecker.ts","../JsStore/Business/Select/BaseSelectLogic.ts","../JsStore/Business/Select/NotWhereLogic.ts","../JsStore/Business/Select/InLogic.ts","../JsStore/Business/Select/LikeLogic.ts","../JsStore/Business/Select/WhereLogic.ts","../JsStore/Business/Select/JoinLogic.ts","../JsStore/Business/Select/GroupByHelperLogic.ts","../JsStore/Business/Select/HelperLogic.ts","../JsStore/Business/Select/InstanceLogic.ts","../JsStore/Business/Count/BaseCountLogic.ts","../JsStore/Business/Count/NotWhereLogic.ts","../JsStore/Business/Count/InLogic.ts","../JsStore/Business/Count/LikeLogic.ts","../JsStore/Business/Count/WhereLogic.ts","../JsStore/Business/Count/InstanceLogic.ts","../JsStore/Business/Update/BaseUpdateLogic.ts","../JsStore/Business/Update/NotWhereLogic.ts","../JsStore/Business/Update/InLogic.ts","../JsStore/Business/Update/LikeLogic.ts","../JsStore/Business/Update/WhereLogic.ts","../JsStore/Business/Update/InstanceLogic.ts","../JsStore/Business/Update/SchemaChecker.ts","../JsStore/Business/Delete/BaseDeleteLogic.ts","../JsStore/Business/Delete/NotWhereLogic.ts","../JsStore/Business/Delete/InLogic.ts","../JsStore/Business/Delete/LikeLogic.ts","../JsStore/Business/Delete/WhereLogic.ts","../JsStore/Business/Delete/InstanceLogic.ts","../JsStore/Business/Insert/InstanceLogic.ts","../JsStore/Business/Insert/ValueCheckerLogic.ts","../JsStore/Business/Insert/ValuesCheckerLogic.ts","../JsStore/CodeExecutionHelper.ts","../JsStore/JsStoreInstance.ts","../JsStore/DirectCode.ts"],"names":[],"mappings":"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","sourcesContent":["/** \r\n * @license :JsStore.js - v1.4.1 - 09/01/2018\r\n * https://github.com/ujjwalguptaofficial/JsStore\r\n * Copyright (c) 2017 @Ujjwal Gupta; Licensed MIT \r\n */","namespace KeyStore {\r\n    export interface IError {\r\n        Name: string;\r\n        Value: string;\r\n    }\r\n    export class Utils {\r\n        /**\r\n         * determine and set the DataBase Type\r\n         * \r\n         * \r\n         * @memberOf UtilityLogic\r\n         */\r\n        static setDbType = function () {\r\n            (self as any).indexedDB = self.indexedDB || (self as any).mozIndexedDB ||\r\n                (self as any).webkitIndexedDB || (self as any).msIndexedDB;\r\n            if (indexedDB) {\r\n                (self as any).IDBTransaction = (self as any).IDBTransaction ||\r\n                    (self as any).webkitIDBTransaction || (self as any).msIDBTransaction;\r\n                (self as any).IDBKeyRange = (self as any).IDBKeyRange ||\r\n                    (self as any).webkitIDBKeyRange || (self as any).msIDBKeyRange;\r\n            }\r\n            else if (!self.alert) {\r\n                console.log('worked failed');\r\n                (self as any).postMessage('message:WorkerFailed');\r\n            }\r\n            else {\r\n                JsStore.status = {\r\n                    ConStatus: JsStore.Connection_Status.UnableToStart,\r\n                    LastError: JsStore.Error_Type.IndexedDbUndefined\r\n                };\r\n            }\r\n        };\r\n    }\r\n}\r\n","namespace KeyStore {\r\n\r\n    export interface ISelect {\r\n        From: any;\r\n        Where: any;\r\n    }\r\n\r\n    export interface IDelete {\r\n        From: string;\r\n        Where: any;\r\n    }\r\n\r\n    export enum ConnectionStatus {\r\n        Connected = \"connected\",\r\n        Closed = \"closed\",\r\n        NotStarted = \"not_connected\"\r\n    }\r\n\r\n    export interface IKeyStoreStatus {\r\n        ConStatus: ConnectionStatus;\r\n        LastError: string;\r\n    }\r\n\r\n    export interface IInsert {\r\n        TableName: string;\r\n        Set: {\r\n            Key: string,\r\n            Value; any\r\n        };\r\n    }\r\n\r\n    export interface IWebWorkerRequest {\r\n        Name: string;\r\n        Query: any;\r\n        OnSuccess: (result) => void;\r\n        OnError: (err: IError) => void;\r\n    }\r\n\r\n    export interface IWebWorkerResult {\r\n        ErrorOccured: boolean;\r\n        ErrorDetails: any;\r\n        ReturnedValue: any;\r\n    }\r\n\r\n    export var request_queue: IWebWorkerRequest[] = [],\r\n        table_name = \"LocalStore\",\r\n        is_code_executing = false;\r\n\r\n}","namespace KeyStore {\r\n    export var prcoessExecutionOfCode = function (request: IWebWorkerRequest) {\r\n        request_queue.push(request);\r\n        if (request_queue.length === 1) {\r\n            executeCode();\r\n        }\r\n    };\r\n\r\n    export var executeCode = function () {\r\n        if (!is_code_executing && request_queue.length > 0) {\r\n            is_code_executing = true;\r\n            var request = {\r\n                Name: request_queue[0].Name,\r\n                Query: request_queue[0].Query\r\n            } as IWebWorkerRequest;\r\n            executeCodeDirect(request);\r\n        }\r\n    };\r\n\r\n    export var executeCodeDirect = function (request: IWebWorkerRequest) {\r\n        new Business.Main(function (results) {\r\n            this.processFinishedRequest(results);\r\n        }.bind(this)).checkConnectionAndExecuteLogic(request);\r\n    };\r\n\r\n    export var processFinishedRequest = function (message: IWebWorkerResult) {\r\n        var finished_request: IWebWorkerRequest = request_queue.shift();\r\n        is_code_executing = false;\r\n        if (message.ErrorOccured) {\r\n            if (finished_request.OnError) {\r\n                finished_request.OnError(message.ErrorDetails);\r\n            }\r\n            else {\r\n                console.log(message.ErrorDetails);\r\n            }\r\n        }\r\n        else {\r\n            if (finished_request.OnSuccess) {\r\n                finished_request.OnSuccess(message.ReturnedValue);\r\n            }\r\n        }\r\n        this.executeCode();\r\n    };\r\n\r\n}","namespace KeyStore {\r\n    export namespace Business {\r\n        export class Base {\r\n            _results = null;\r\n            _onSuccess: (results) => void;\r\n            _onError: (err: IError) => void;\r\n            _errorOccured: boolean = false;\r\n            _errorCount = 0;\r\n            _transaction: IDBTransaction;\r\n            _objectStore: IDBObjectStore;\r\n\r\n            protected on_errorOccured = function (e) {\r\n                ++this._errorCount;\r\n                if (this._errorCount === 1) {\r\n                    if (this.OnError != null) {\r\n                        this.OnError((e as any).target.error);\r\n                    }\r\n                }\r\n                console.error(e);\r\n            };\r\n        }\r\n    }\r\n}","namespace KeyStore {\r\n    export namespace Business {\r\n        export class Get extends Base {\r\n            _query: ISelect;\r\n            constructor(query: ISelect, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n                super();\r\n                this._query = query;\r\n                this._onError = onError;\r\n                this._transaction = db_connection.transaction([query.From], \"readonly\");\r\n                this._objectStore = this._transaction.objectStore(query.From);\r\n                this._transaction.oncomplete = function (e) {\r\n                    if (onSuccess != null) {\r\n                        onSuccess(this._results);\r\n                    }\r\n                }.bind(this);\r\n                this.get();\r\n            }\r\n\r\n            private get = function () {\r\n                var getData = function (column, value) {\r\n                    var cursor_request = this._objectStore.index(column).openCursor(IDBKeyRange.only(value));\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.on_errorOccured(e);\r\n                    }.bind(this);\r\n                    cursor_request.onsuccess = function (e) {\r\n                        var cursor: IDBCursorWithValue = e.target.result;\r\n                        if (cursor) {\r\n                            this._results = cursor.value['Value'];\r\n                        }\r\n                    }.bind(this);\r\n                }.bind(this);\r\n\r\n                for (var prop in this._query.Where) {\r\n                    getData(prop, this._query.Where[prop]);\r\n                    break;\r\n                }\r\n\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace KeyStore {\r\n    export namespace Business {\r\n        export class Set extends Base {\r\n\r\n            constructor(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n                super();\r\n                try {\r\n                    this._onError = onError;\r\n                    this._transaction = db_connection.transaction([query.TableName], \"readwrite\");\r\n                    this._objectStore = this._transaction.objectStore(query.TableName);\r\n                    this._transaction.oncomplete = function (e) {\r\n                        if (onSuccess != null) {\r\n                            onSuccess();\r\n                        }\r\n                    };\r\n                    this.setData(query.Set);\r\n                }\r\n                catch (ex) {\r\n                    console.error(ex);\r\n                }\r\n            }\r\n\r\n            private setData = function (value) {\r\n                var updateIfExistElseInsert = function () {\r\n                    var cursor_request = this._objectStore.index('Key').openCursor(IDBKeyRange.only(value['Key']));\r\n                    cursor_request.onsuccess = function (e) {\r\n                        var cursor: IDBCursorWithValue = e.target.result;\r\n                        if (cursor) {\r\n                            cursor.value['Value'] = value['Value'];\r\n                            cursor.update(cursor.value);\r\n                        }\r\n                        else {\r\n                            insertData();\r\n                        }\r\n                    }.bind(this);\r\n\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.on_errorOccured(e);\r\n                    }.bind(this);\r\n\r\n                }.bind(this),\r\n                    insertData = function () {\r\n                        var add_result = this._objectStore.add(value);\r\n                        add_result.onerror = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.on_errorOccured(e);\r\n                        }.bind(this);\r\n                    }.bind(this);\r\n                updateIfExistElseInsert();\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace KeyStore {\r\n    export namespace Business {\r\n        export class Remove extends Base {\r\n            _query: IDelete;\r\n            _rowAffected: number = 0;\r\n            constructor(query: IDelete, onSuccess: (recordRemoved: number) => void, onError: (err: IError) => void) {\r\n                super();\r\n                this._query = query;\r\n                this._onError = onError;\r\n                this._transaction = db_connection.transaction([query.From], \"readwrite\");\r\n                this._objectStore = this._transaction.objectStore(query.From);\r\n\r\n                this._transaction.oncomplete = function () {\r\n                    if (onSuccess != null) {\r\n                        onSuccess(this._rowAffected);\r\n                    }\r\n                }.bind(this);\r\n\r\n                this._transaction.onerror = function (e) {\r\n                    this.on_errorOccured(e);\r\n                }.bind(this);\r\n                this.remove();\r\n            }\r\n\r\n            private remove = function () {\r\n                var removeData = function (column, value) {\r\n                    var cursor_request = this._objectStore.index(column).openCursor(IDBKeyRange.only(value));\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.on_errorOccured(e);\r\n                    }.bind(this);\r\n                    cursor_request.onsuccess = function (e) {\r\n                        var cursor: IDBCursorWithValue = e.target.result;\r\n                        if (cursor) {\r\n                            cursor.delete();\r\n                            ++this._rowAffected;\r\n                            cursor.continue();\r\n                        }\r\n                    }.bind(this);\r\n                }.bind(this);\r\n\r\n                for (var prop in this._query.Where) {\r\n                    if (!this._errorOccured) {\r\n                        removeData(prop, this._query.Where[prop]);\r\n                    }\r\n                    break;\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace KeyStore {\r\n    export namespace Business {\r\n        export class InitDb {\r\n            constructor(dbName: string, tableName: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var db_request = self.indexedDB.open(dbName, 1);\r\n                db_request.onerror = function (event) {\r\n                    if ((event as any).target.error.name === 'InvalidStateError') {\r\n                        JsStore.status = {\r\n                            ConStatus: JsStore.Connection_Status.UnableToStart,\r\n                            LastError: JsStore.Error_Type.IndexedDbBlocked,\r\n                        };\r\n                    }\r\n                    if (onError != null) {\r\n                        onError((event as any).target.error);\r\n                    }\r\n                };\r\n\r\n                db_request.onsuccess = function (event) {\r\n                    status.ConStatus = ConnectionStatus.Connected;\r\n                    db_connection = db_request.result;\r\n                    db_connection.onclose = function () {\r\n                        status.ConStatus = ConnectionStatus.Closed;\r\n                        status.LastError = \"Connection Closed\";\r\n                    };\r\n\r\n                    db_connection.onversionchange = function (e) {\r\n                        if (e.newVersion === null) { // An attempt is made to delete the db\r\n                            e.target.close(); // Manually close our connection to the db\r\n                        }\r\n                    };\r\n\r\n                    db_connection.onerror = function (e) {\r\n                        status.LastError = \"Error occured in connection :\" + e.target.result;\r\n                    };\r\n\r\n                    db_connection.onabort = function (e) {\r\n                        status.ConStatus = ConnectionStatus.Closed;\r\n                        status.LastError = \"Connection aborted\";\r\n                    };\r\n\r\n                    if (onSuccess != null) {\r\n                        onSuccess();\r\n                    }\r\n                };\r\n\r\n                db_request.onupgradeneeded = function (event: any) {\r\n                    var db = event.target.result,\r\n                        column = \"Key\";\r\n                    db.createObjectStore(tableName, {\r\n                        keyPath: column\r\n                    }).createIndex(column, column, { unique: true });\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace KeyStore {\r\n    export namespace Business {\r\n        export var db_connection,\r\n            status: IKeyStoreStatus = {\r\n                ConStatus: ConnectionStatus.NotStarted,\r\n                LastError: \"\"\r\n            } as IKeyStoreStatus;\r\n        export class Main {\r\n            _onSuccess: () => void;\r\n            constructor(onSuccess = null) {\r\n                this._onSuccess = onSuccess;\r\n            }\r\n\r\n            public set = function (query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var obj_insert = new Set(query, onSuccess, onError);\r\n            };\r\n\r\n            public remove = function (query: IDelete, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n                var obj_delete = new Remove(query, onSuccess, onError);\r\n            };\r\n\r\n            public get = function (query: ISelect, onSuccess: (result) => void, onError: (err: IError) => void) {\r\n                var get_object = new Get(query, onSuccess, onError);\r\n            };\r\n\r\n            public createDb = function (tableName, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var db_name = \"KeyStore\";\r\n                var init_db_object = new InitDb(db_name, tableName, onSuccess, onError);\r\n            };\r\n\r\n            public checkConnectionAndExecuteLogic = function (request: IWebWorkerRequest) {\r\n                if (request.Name === 'create_db' || request.Name === 'open_db') {\r\n                    this.executeLogic(request);\r\n                }\r\n                else {\r\n                    if (status.ConStatus === ConnectionStatus.Connected) {\r\n                        this.executeLogic(request);\r\n                    }\r\n                    else if (status.ConStatus === ConnectionStatus.NotStarted) {\r\n                        setTimeout(function () {\r\n                            this.checkConnectionAndExecuteLogic(request);\r\n                        }.bind(this), 100);\r\n                    }\r\n                    else if (status.ConStatus === ConnectionStatus.Closed) {\r\n                        this.createDb(table_name, function () {\r\n                            this.checkConnectionAndExecuteLogic(request);\r\n                        }.bind(this), 100);\r\n                    }\r\n                }\r\n            };\r\n\r\n            private returnResult = function (result) {\r\n                if (this._onSuccess) {\r\n                    this._onSuccess(result);\r\n                }\r\n            };\r\n\r\n            private executeLogic = function (request: IWebWorkerRequest) {\r\n                var onSuccess = function (results) {\r\n                    this.returnResult({\r\n                        ReturnedValue: results\r\n                    } as IWebWorkerResult);\r\n                }.bind(this),\r\n                    onError = function (err) {\r\n                        this.returnResult({\r\n                            ErrorOccured: true,\r\n                            ErrorDetails: err\r\n                        } as IWebWorkerResult);\r\n                    }.bind(this);\r\n\r\n                switch (request.Name) {\r\n                    case 'get':\r\n                        this.get(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'set': this.set(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'remove': this.remove(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'create_db': this.createDb(request.Query, onSuccess, onError); break;\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace KeyStore {\r\n\r\n    /**\r\n     * Initialize KeyStore\r\n     * \r\n     */\r\n    export var init = function () {\r\n        Utils.setDbType();\r\n        if (indexedDB) {\r\n            prcoessExecutionOfCode({\r\n                Name: 'create_db',\r\n                Query: table_name\r\n            } as IWebWorkerRequest);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * return the value by key\r\n     * \r\n     * @param {string} key \r\n     * @param {(result) => void} onSuccess \r\n     * @param {(err: IError) => void} [onError=null] \r\n     * @returns \r\n     */\r\n    export var get = function (key: string, onSuccess: (result) => void, onError: (err: IError) => void = null) {\r\n        var query = {\r\n            From: table_name,\r\n            Where: {\r\n                Key: key\r\n            }\r\n        } as ISelect;\r\n        prcoessExecutionOfCode({\r\n            Name: 'get',\r\n            Query: query,\r\n            OnSuccess: onSuccess,\r\n            OnError: onError\r\n        } as IWebWorkerRequest);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * insert or update value\r\n     * \r\n     * @param {any} key \r\n     * @param {any} value \r\n     * @param {(result) => void} [onSuccess] \r\n     * @param {(err: IError) => void} [onError] \r\n     * @returns \r\n     */\r\n    export var set = function (key, value, onSuccess?: (result) => void, onError?: (err: IError) => void) {\r\n        var query = {\r\n            TableName: table_name,\r\n            Set: {\r\n                Key: key,\r\n                Value: value\r\n            }\r\n        } as IInsert;\r\n        prcoessExecutionOfCode({\r\n            Name: 'set',\r\n            Query: query,\r\n            OnSuccess: onSuccess,\r\n            OnError: onError\r\n        } as IWebWorkerRequest);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * delete value\r\n     * \r\n     * @param {string} key \r\n     * @param {(result) => void} [onSuccess=null] \r\n     * @param {(err: IError) => void} [onError=null] \r\n     * @returns \r\n     */\r\n    export var remove = function (\r\n        key: string, onSuccess: (result) => void = null, onError: (err: IError) => void = null\r\n    ) {\r\n        var query = {\r\n            From: table_name,\r\n            Where: {\r\n                Key: key\r\n            }\r\n        } as IDelete;\r\n        prcoessExecutionOfCode({\r\n            Name: 'remove',\r\n            Query: query,\r\n            OnSuccess: onSuccess,\r\n            OnError: onError\r\n        } as IWebWorkerRequest);\r\n        return this;\r\n    };\r\n}\r\n","namespace JsStore {\r\n\r\n    export enum Occurence {\r\n        First = 'f',\r\n        Last = 'l',\r\n        Any = 'a'\r\n    }\r\n\r\n    export enum WebWorker_Status {\r\n        Registered = \"registerd\",\r\n        Failed = \"failed\",\r\n        NotStarted = \"not_started\"\r\n    }\r\n\r\n    export enum Connection_Status {\r\n        Connected = \"connected\",\r\n        Closed = \"closed\",\r\n        NotStarted = \"not_started\",\r\n        UnableToStart = \"unable_to_start\"\r\n    }\r\n\r\n    export enum WhereQryOption {\r\n        In = \"In\",\r\n        Like = \"Like\",\r\n        Or = \"Or\"\r\n    }\r\n\r\n    export enum DataType {\r\n        String = \"string\",\r\n        Object = \"object\",\r\n        Array = \"array\"\r\n    }\r\n}","namespace JsStore {\r\n    export interface IDbInfo {\r\n        DbName: string;\r\n        Table: {\r\n            Name: string,\r\n            Version: number\r\n        };\r\n    }\r\n\r\n    export interface IDataBaseOption {\r\n        Name: string;\r\n        Tables: ITableOption[];\r\n    }\r\n\r\n    export interface ITableOption {\r\n        Name: string;\r\n        Columns: IColumnOption[];\r\n        Version?: number;\r\n    }\r\n\r\n    export interface IColumnOption {\r\n        Name: string;\r\n        PrimaryKey?: boolean;\r\n        AutoIncrement?: boolean;\r\n        Unique?: boolean;\r\n        NotNull?: boolean;\r\n        DataType?: string;\r\n        Default?: any;\r\n        MultiEntry?: boolean;\r\n        AdvTextSearch?: boolean;\r\n    }\r\n\r\n    export interface ISelect {\r\n        From: any;\r\n        Where: any;\r\n        Skip: number;\r\n        Limit: number;\r\n        OnSuccess: (results: any[]) => void;\r\n        OnError: (error: IError) => void;\r\n        Order: IOrder;\r\n        GroupBy: any;\r\n        Aggregate: {\r\n            Max: any,\r\n            Min: any,\r\n            Count: any,\r\n            Sum: any,\r\n            Avg: any\r\n        };\r\n        IgnoreCase: boolean;\r\n        Distinct: boolean;\r\n    }\r\n\r\n    export interface IOrder {\r\n        By: string; // Column name\r\n        Type: string;\r\n    }\r\n\r\n    export interface ICount {\r\n        From: any;\r\n        IgnoreCase: boolean;\r\n        Where: any;\r\n        OnSuccess: (noOfRecord: number) => void;\r\n        OnError: (error: IError) => void;\r\n    }\r\n\r\n    export interface IDelete {\r\n        From: string;\r\n        IgnoreCase: boolean;\r\n        Where: any;\r\n        OnSuccess: (rowsDeleted: number) => void;\r\n        OnError: (error: IError) => void;\r\n    }\r\n\r\n    export interface IUpdate {\r\n        In: string;\r\n        IgnoreCase: boolean;\r\n        Set: any;\r\n        Where: any;\r\n        OnSuccess: (rowsUpdated: number) => void;\r\n        OnError: (error: IError) => void;\r\n    }\r\n\r\n    export interface IInsert {\r\n        Into: string;\r\n        Values: any[];\r\n        Return: boolean;\r\n        OnSuccess: (rowsInserted: number) => void;\r\n        OnError: (error: IError) => void;\r\n        SkipDataCheck: boolean;\r\n    }\r\n\r\n    export interface ICondition {\r\n        Column: string;\r\n        Value: string;\r\n        Op: string;\r\n    }\r\n\r\n    export interface ITableJoin {\r\n        Column: string;\r\n        Table: string;\r\n        Where: any;\r\n        Order: IOrder;\r\n        JoinType: string;\r\n        NextJoin: INextJoin;\r\n    }\r\n\r\n    export interface ISelectJoin {\r\n        From: IJoin; // IJoin\r\n        Count: boolean;\r\n        Skip: number;\r\n        Limit: number;\r\n        OnSuccess: (results) => void;\r\n        OnError: (err: IError) => void;\r\n    }\r\n\r\n    export interface IJoin {\r\n        Table1: ITableJoin;\r\n        Join: string; // inner,left,right,outer\r\n        Table2: ITableJoin;\r\n    }\r\n\r\n    export interface INextJoin {\r\n        Table: string;\r\n        Column: string;\r\n    }\r\n\r\n    export interface IJsStoreStatus {\r\n        ConStatus: Connection_Status;\r\n        LastError: Error_Type;\r\n    }\r\n\r\n    export interface IWebWorkerRequest {\r\n        Name: string;\r\n        Query: any;\r\n        OnSuccess: (results) => void;\r\n        OnError: (err: IError) => void;\r\n    }\r\n\r\n    export interface IWebWorkerResult {\r\n        ErrorOccured: boolean;\r\n        ErrorDetails: any;\r\n        ReturnedValue: any;\r\n        ThrowError: boolean;\r\n    }\r\n\r\n    export interface IAggregate {\r\n        Max: any[];\r\n        Min: any[];\r\n        Sum: any[];\r\n        Count: any[];\r\n        Avg: any[];\r\n    }\r\n}","namespace JsStore {\r\n    export var enable_log = false,\r\n        db_version: number = 0,\r\n        status: IJsStoreStatus = {\r\n            ConStatus: Connection_Status.NotStarted,\r\n            LastError: null\r\n        } as IJsStoreStatus,\r\n        temp_results: any[] = [];\r\n\r\n    export var getObjectFirstKey = function (value) {\r\n        for (var key in value) {\r\n            return key;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    export var log = function (msg) {\r\n        if (enable_log) {\r\n            console.log(msg);\r\n        }\r\n    };\r\n\r\n    export var logError = function (msg) {\r\n        if (enable_log) {\r\n            console.error(msg);\r\n        }\r\n    };\r\n}","namespace JsStore {\r\n    export class Utils {\r\n\r\n        static convertObjectintoLowerCase(obj: any) {\r\n            var keys = Object.keys(obj);\r\n            var n = keys.length;\r\n            while (n--) {\r\n                var key = keys[n];\r\n                obj[key.toLowerCase()] = obj[key];\r\n                delete obj[key];\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","namespace JsStore {\r\n    /**\r\n     * checks whether db exist or not\r\n     * \r\n     * @param {DbInfo} dbInfo \r\n     * @param {() => void} [callback=null] \r\n     * @param {() => void} [errCallBack=null] \r\n     * @returns \r\n     */\r\n    export var isDbExist = function (\r\n        dbInfo: IDbInfo,\r\n        callback: (isExist: boolean) => void = null,\r\n        errCallBack: (err: IError) => void = null\r\n    ) {\r\n        var use_promise = callback ? false : true;\r\n        if (status.ConStatus !== Connection_Status.UnableToStart) {\r\n            if (use_promise) {\r\n                return new Promise(function (resolve, reject) {\r\n                    if (typeof dbInfo === 'string') {\r\n                        getDbVersion(dbInfo, function (dbVersion) {\r\n                            resolve(Boolean(dbVersion));\r\n                        });\r\n                    }\r\n                    else {\r\n                        getDbVersion(dbInfo.DbName, function (dbVersion) {\r\n                            resolve(dbInfo.Table.Version <= dbVersion);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                if (typeof dbInfo === 'string') {\r\n                    getDbVersion.call(this, dbInfo, function (dbVersion) {\r\n                        callback.call(this, Boolean(dbVersion));\r\n                    });\r\n                }\r\n                else {\r\n                    getDbVersion.call(this, dbInfo.DbName, function (dbVersion) {\r\n                        callback.call(this, dbInfo.Table.Version <= dbVersion);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var error = {\r\n                _type: status.LastError,\r\n                _message: null\r\n            } as IError;\r\n            switch (error._type) {\r\n                case Error_Type.IndexedDbBlocked:\r\n                    error._message = \"IndexedDB is blocked\"; break;\r\n                case Error_Type.IndexedDbUndefined:\r\n                    error._message = \"IndexedDB is not supported\"; break;\r\n            }\r\n            if (use_promise) {\r\n                return new Promise(function (resolve, reject) {\r\n                    reject(error);\r\n                });\r\n            }\r\n            else if (errCallBack) {\r\n                errCallBack(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * get Db Version\r\n     * \r\n     * @param {string} dbName \r\n     * @param {(version: number) => void} callback \r\n     */\r\n    export var getDbVersion = function (dbName: string, callback: (version: number) => void) {\r\n        KeyStore.get(\"JsStore_\" + dbName + '_Db_Version', function (dbVersion) {\r\n            callback.call(this, Number(dbVersion));\r\n        }.bind(this));\r\n    };\r\n\r\n    /**\r\n     * get Database Schema\r\n     * \r\n     * @param {string} dbName \r\n     * @param {(any) => void} callback \r\n     */\r\n    export var getDbSchema = function (dbName: string, callback: (any) => void) {\r\n        if (callback) {\r\n            KeyStore.get(\"JsStore_\" + dbName + \"_Schema\", function (result) {\r\n                if (result._name) {\r\n                    callback(result);\r\n                }\r\n                else {\r\n                    var db_schema = new Model.DataBase(result);\r\n                    KeyStore.set(\"JsStore_\" + dbName + \"_Schema\", db_schema);\r\n                    callback(db_schema);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * check for null value\r\n     * \r\n     * @param {any} value \r\n     * @returns \r\n     */\r\n    export var isNull = function (value) {\r\n        if (value == null) {\r\n            return true;\r\n        } else {\r\n            switch (typeof value) {\r\n                case 'string': return value.length === 0;\r\n                case 'number': return isNaN(value);\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Enable log\r\n     * \r\n     */\r\n    export var enableLog = function () {\r\n        enable_log = true;\r\n        if (worker_instance) {\r\n            worker_instance.postMessage({\r\n                Name: 'change_log_status',\r\n                Query: {\r\n                    logging: enable_log\r\n                }\r\n            } as IWebWorkerRequest);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * disable log\r\n     * \r\n     */\r\n    export var disableLog = function () {\r\n        enable_log = false;\r\n        if (worker_instance) {\r\n            worker_instance.postMessage({\r\n                Name: 'change_log_status',\r\n                Query: {\r\n                    logging: enable_log\r\n                }\r\n            } as IWebWorkerRequest);\r\n        }\r\n    };\r\n}","namespace JsStore {\r\n    export enum Error_Type {\r\n        UndefinedColumn = \"undefined_column\",\r\n        UndefinedValue = \"undefined_value\",\r\n        UndefinedColumnName = \"undefined_column_name\",\r\n        UndefinedDbName = \"undefined_database_name\",\r\n        UndefinedColumnValue = \"undefined_column_value\",\r\n        NotArray = \"not_array\",\r\n        NoValueSupplied = \"no_value_supplied\",\r\n        ColumnNotExist = \"column_not_exist\",\r\n        InvalidOp = \"invalid_operator\",\r\n        NullValue = \"null_value\",\r\n        BadDataType = \"bad_data_type\",\r\n        NextJoinNotExist = \"next_join_not_exist\",\r\n        TableNotExist = \"table_not_exist\",\r\n        DbNotExist = \"db_not_exist\",\r\n        IndexedDbUndefined = \"indexeddb_undefined\",\r\n        IndexedDbBlocked = \"indexeddb_blocked\",\r\n        ConnectionAborted = \"connection_aborted\",\r\n        ConnectionClosed = \"connection_closed\",\r\n        NotObject = \"not_object\"\r\n    }\r\n\r\n    export interface IError {\r\n        _type: Error_Type;\r\n        _message: string;\r\n    }\r\n\r\n    export class Error implements IError {\r\n        _type: Error_Type;\r\n        _message: string;\r\n        private _info: any;\r\n\r\n        constructor(type: Error_Type, info: any = null) {\r\n            this._type = type;\r\n            this._info = info;\r\n            this._message = this.getMsg();\r\n        }\r\n\r\n        public throw = function () {\r\n            throw this.get();\r\n        };\r\n\r\n        logError = function () {\r\n            console.error(this.get());\r\n        };\r\n\r\n        logWarning = function () {\r\n            console.warn(this.get());\r\n        };\r\n\r\n        public get() {\r\n            return {\r\n                _message: this._message,\r\n                _type: this._type\r\n            } as IError;\r\n        }\r\n\r\n        private getMsg = function () {\r\n            var err_msg: string;\r\n            switch (this._type) {\r\n                case Error_Type.NotArray:\r\n                    err_msg = \"Supplied value is not an array\";\r\n                    break;\r\n                case Error_Type.UndefinedColumn:\r\n                    err_msg = \"Column is undefined in Where\";\r\n                    break;\r\n                case Error_Type.UndefinedValue:\r\n                    err_msg = \"Value is undefined in Where\";\r\n                    break;\r\n                case Error_Type.UndefinedColumnName:\r\n                    err_msg = \"Column name is undefined '\" + this._info['TableName'] + \"'\";\r\n                    break;\r\n                case Error_Type.UndefinedDbName:\r\n                    err_msg = \"Database name is not supplied\";\r\n                    break;\r\n                case Error_Type.UndefinedColumnValue:\r\n                    err_msg = \"Column value is undefined\";\r\n                    break;\r\n                case Error_Type.NoValueSupplied:\r\n                    err_msg = \"No value supplied\";\r\n                    break;\r\n                case Error_Type.InvalidOp:\r\n                    err_msg = \"Invalid Op Value '\" + this._info['Op'] + \"'\";\r\n                    break;\r\n                case Error_Type.ColumnNotExist:\r\n                    err_msg = \"Column '\" + this._info['ColumnName'] + \"' does not exist\";\r\n                    break;\r\n                case Error_Type.NullValue:\r\n                    err_msg = \"Null value is not allowed for column '\" + this._info['ColumnName'] + \"'\";\r\n                    break;\r\n                case Error_Type.BadDataType:\r\n                    err_msg = \"Supplied value for column '\" + this._info['ColumnName'] +\r\n                        \"' does not have valid type\";\r\n                    break;\r\n                case Error_Type.NextJoinNotExist: err_msg = \"Next join details not supplied\";\r\n                    break;\r\n                case Error_Type.TableNotExist:\r\n                    err_msg = \"Table '\" + this._info['TableName'] + \"' does not exist\";\r\n                    break;\r\n                case Error_Type.DbNotExist:\r\n                    err_msg = \"Database '\" + this._info['DbName'] + \"' does not exist\";\r\n                    break;\r\n                case Error_Type.NotObject:\r\n                    err_msg = \"supplied value is not object\";\r\n                    break;\r\n                default:\r\n                    err_msg = this._message;\r\n                    break;\r\n            }\r\n            return err_msg;\r\n        };\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Model {\r\n\r\n        export class Column {\r\n            _name: string;\r\n            _autoIncrement: boolean;\r\n            _primaryKey: boolean;\r\n            _unique: boolean;\r\n            _notNull: boolean;\r\n            _dataType: string;\r\n            _default: any;\r\n            _multiEntry: boolean;\r\n            _advTextSearch: boolean;\r\n\r\n            constructor(key: IColumnOption, tableName: string) {\r\n                if (key.Name != null) {\r\n                    this._name = key.Name;\r\n                }\r\n                else {\r\n                    var err = new Error(Error_Type.UndefinedColumnName, { TableName: tableName });\r\n                    err.throw();\r\n                }\r\n                this._autoIncrement = key.AutoIncrement != null ? key.AutoIncrement : false;\r\n                this._primaryKey = key.PrimaryKey != null ? key.PrimaryKey : false;\r\n                this._unique = key.Unique != null ? key.Unique : false;\r\n                this._notNull = key.NotNull != null ? key.NotNull : false;\r\n                this._dataType = key.DataType != null ? key.DataType : (key.AutoIncrement ? 'number' : null);\r\n                this._default = key.Default;\r\n                this._multiEntry = key.MultiEntry == null ? false : true;\r\n                this._advTextSearch = key.AdvTextSearch != null ? true : false;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Model {\r\n        export class Table {\r\n            _name: string;\r\n            _columns: Column[] = [];\r\n            _version: number;\r\n            _primaryKey: string;\r\n\r\n            constructor(table: ITableOption) {\r\n                this._name = table.Name;\r\n                this._version = table.Version == null ? 1 : table.Version;\r\n                table.Columns.forEach(function (item) {\r\n                    this._columns.push(new Column(item, table.Name));\r\n                }, this);\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Model {\r\n        export class TableHelper {\r\n            _name: string;\r\n            _columns: Column[] = [];\r\n\r\n            // internal Members\r\n            _primaryKey: string;\r\n            _version: number;\r\n            _requireDelete: boolean = false;\r\n            _requireCreation: boolean = false;\r\n            _callback: () => void;\r\n\r\n            constructor(table: Table) {\r\n                this._name = table._name;\r\n                this._version = table._version;\r\n                this._columns = table._columns;\r\n                this.setPrimaryKey();\r\n            }\r\n\r\n            public createMetaData = function (dbName: string, callBack: () => void) {\r\n                this._callback = callBack;\r\n                this.setRequireDelete(dbName);\r\n                this.setDbVersion(dbName);\r\n            };\r\n\r\n            public getAtsTable = function () {\r\n                var table: Table = null;\r\n                this._columns.every(function (column: Column) {\r\n                    if (column._advTextSearch) {\r\n                        table = new Table({\r\n                            Columns: [\r\n                                {\r\n                                    Name: this._primaryKey,\r\n                                    PrimaryKey: true\r\n                                },\r\n                                {\r\n                                    MultiEntry: true,\r\n                                    Name: column._name,\r\n                                }\r\n                            ],\r\n                            Name: this._name + \"_\" + column._name,\r\n                        });\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }, this);\r\n                return table;\r\n            };\r\n\r\n            private setPrimaryKey() {\r\n                this._columns.every(function (item) {\r\n                    this._primaryKey = item._primaryKey ? item._name : \"\";\r\n                    return !item._primaryKey;\r\n                }, this);\r\n            }\r\n\r\n            private setRequireDelete(dbName: string) {\r\n                KeyStore.get(\"JsStore_\" + dbName + \"_\" + this._name + \"_Version\", function (tableVersion) {\r\n                    if (tableVersion == null) {\r\n                        this._requireCreation = true;\r\n                    }\r\n                    // mark only table which has version greater than store version\r\n                    else if (tableVersion < this._version) {\r\n                        this._requireDelete = true;\r\n                    }\r\n                }.bind(this));\r\n            }\r\n\r\n            private setDbVersion(dbName: string) {\r\n                db_version = db_version > this._version ? db_version : this._version;\r\n                // setting db version\r\n                KeyStore.set('JsStore_' + dbName + '_Db_Version', db_version)\r\n                    // setting table version\r\n                    .set(\"JsStore_\" + dbName + \"_\" + this._name + \"_Version\", db_version, this._callback);\r\n                this._version = db_version;\r\n            }\r\n\r\n        }\r\n    }\r\n}","\r\nnamespace JsStore {\r\n    export namespace Model {\r\n        export class DbHelper {\r\n            _name: string;\r\n            _tables: Table[] = [];\r\n\r\n            constructor(dataBase: DataBase) {\r\n                this._name = dataBase._name;\r\n                this._tables = dataBase._tables;\r\n            }\r\n\r\n            public createMetaData = function (callBack: (tablesMetaData: TableHelper[]) => void) {\r\n                var index = 0,\r\n                    table_helpers: TableHelper[] = [],\r\n                    createMetaDataForTable = function () {\r\n                        if (index < this._tables.length) {\r\n                            var table: Table = this._tables[index],\r\n                                table_helper: TableHelper = new TableHelper(table),\r\n                                ats_table = table_helper.getAtsTable();\r\n                            table_helper.createMetaData(this._name, function () {\r\n                                table_helper._callback = null;\r\n                                table_helpers.push(table_helper);\r\n                                createMetaDataForTable();\r\n                            });\r\n                            if (ats_table != null) {\r\n                                this._tables.push(ats_table);\r\n                            }\r\n                            ++index;\r\n                        }\r\n                        else {\r\n                            callBack(table_helpers);\r\n                        }\r\n                    }.bind(this);\r\n                createMetaDataForTable();\r\n            };\r\n\r\n        }\r\n    }\r\n}\r\n","\r\nnamespace JsStore {\r\n    export namespace Model {\r\n        export class DataBase {\r\n            _name: string;\r\n            _tables: Table[] = [];\r\n\r\n            constructor(dataBase: IDataBaseOption) {\r\n                this._name = dataBase.Name;\r\n                dataBase.Tables.forEach(function (item) {\r\n                    this._tables.push(new Table(item));\r\n                }, this);\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class BaseHelper {\r\n\r\n            protected filterOnOccurence = function (value) {\r\n                var found = false;\r\n                value = value.toLowerCase();\r\n                switch (this._compSymbol) {\r\n                    case Occurence.Any: if (value.indexOf(this._compValue) >= 0) {\r\n                        found = true;\r\n                    } break;\r\n                    case Occurence.First: if (value.indexOf(this._compValue) === 0) {\r\n                        found = true;\r\n                    } break;\r\n                    default: if (value.lastIndexOf(this._compValue) === value.length - this._compValueLength) {\r\n                        found = true;\r\n                    }\r\n                }\r\n                return found;\r\n            };\r\n\r\n            protected getArrayFromWord = function (word: string) {\r\n                return word.split(\" \");\r\n            };\r\n\r\n            protected getTable = function (tableName: string) {\r\n                var current_table: Table;\r\n                active_db._tables.every(function (table) {\r\n                    if (table._name === tableName) {\r\n                        current_table = table;\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n                return current_table;\r\n            };\r\n\r\n            protected getAtsColumns = function () {\r\n                var table: Table = this.getTable(this._tableName),\r\n                    columns = [];\r\n                table._columns.forEach(function (column) {\r\n                    if (column._advTextSearch === true) {\r\n                        columns.push(column._name);\r\n                    }\r\n                });\r\n                return columns;\r\n            };\r\n\r\n            protected getAtsTables = function (atsColumns) {\r\n                var tables = [];\r\n                atsColumns.forEach(function (columnName) {\r\n                    tables.push(this._tableName + \"_\" + columnName);\r\n                }, this);\r\n                return tables;\r\n            };\r\n\r\n            protected isAtsColumn = function (columnName) {\r\n                if (this._tableName) {\r\n                    var table: Table = this.getTable(this._tableName),\r\n                        status = false;\r\n                    table._columns.every(function (column) {\r\n                        if (column._name === columnName) {\r\n                            status = column._advTextSearch;\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    return status;\r\n                }\r\n                return false;\r\n            };\r\n\r\n            protected getKeyRange = function (value, op) {\r\n                var key_range: IDBKeyRange;\r\n                switch (op) {\r\n                    case '-': key_range = IDBKeyRange.bound(value.Low, value.High, false, false); break;\r\n                    case '>': key_range = IDBKeyRange.lowerBound(value, true); break;\r\n                    case '>=': key_range = IDBKeyRange.lowerBound(value); break;\r\n                    case '<': key_range = IDBKeyRange.upperBound(value, true); break;\r\n                    case '<=': key_range = IDBKeyRange.upperBound(value); break;\r\n                    default: key_range = IDBKeyRange.only(value); break;\r\n                }\r\n                return key_range;\r\n\r\n            };\r\n\r\n            protected getObjectSecondKey = function (value) {\r\n                var is_second = false;\r\n                for (var key in value) {\r\n                    if (is_second) {\r\n                        return key;\r\n                    }\r\n                    else {\r\n                        is_second = true;\r\n                    }\r\n                }\r\n            };\r\n\r\n            protected getPrimaryKey = function (tableName) {\r\n                var primary_key = (this.getTable(tableName) as Table)._primaryKey;\r\n                return primary_key ? primary_key : this.getKeyPath(tableName);\r\n            };\r\n\r\n            protected getKeyPath = function (tableName) {\r\n                var transaction: IDBTransaction = db_connection.transaction([tableName], \"readonly\"),\r\n                    object_store = transaction.objectStore(tableName);\r\n                return object_store.keyPath;\r\n            };\r\n\r\n            protected sortNumberInAsc = function (values) {\r\n                values.sort(function (a, b) {\r\n                    return a - b;\r\n                });\r\n                return values;\r\n            };\r\n\r\n            protected sortNumberInDesc = function (values) {\r\n                values.sort(function (a, b) {\r\n                    return b - a;\r\n                });\r\n                return values;\r\n            };\r\n\r\n            protected sortAlphabetInAsc = function (values) {\r\n                values.sort(function (a, b) {\r\n                    return a.toLowerCase().localeCompare(b.toLowerCase());\r\n                });\r\n                return values;\r\n            };\r\n\r\n            protected sortAlphabetInDesc = function (values) {\r\n                values.sort(function (a, b) {\r\n                    return b.toLowerCase().localeCompare(a.toLowerCase());\r\n                });\r\n                return values;\r\n            };\r\n\r\n            protected getAllCombinationOfWord(word, isArray) {\r\n                if (isArray) {\r\n                    var results = [];\r\n                    for (var i = 0, length = word.length; i < length; i++) {\r\n                        results = results.concat(this.getCombination(word[i]));\r\n                    }\r\n                    return results;\r\n                }\r\n                else {\r\n                    return this.getCombination(word);\r\n                }\r\n            }\r\n\r\n            private getCombination(word: string) {\r\n                var results = [],\r\n                    doAndPushCombination = function (subWord: string, chars, index: number) {\r\n                        if (index === subWord.length) {\r\n                            results.push(chars.join(\"\"));\r\n                        } else {\r\n                            var ch = subWord.charAt(index);\r\n                            chars[index] = ch.toLowerCase();\r\n                            doAndPushCombination(subWord, chars, index + 1);\r\n                            chars[index] = ch.toUpperCase();\r\n                            doAndPushCombination(subWord, chars, index + 1);\r\n                        }\r\n                    };\r\n                doAndPushCombination(word, [], 0);\r\n                return results;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class Base extends BaseHelper {\r\n            _error: IError;\r\n            _errorOccured: boolean = false;\r\n            _errorCount = 0;\r\n            _rowAffected = 0;\r\n            _onSuccess: (result?) => void;\r\n            _onError: (err: IError) => void;\r\n            _transaction: IDBTransaction;\r\n            _objectStore: IDBObjectStore;\r\n            _query;\r\n            _sendResultFlag: boolean = true;\r\n            _whereChecker: WhereChecker;\r\n            _tableName: string;\r\n\r\n            protected onErrorOccured = function (e, customError = false) {\r\n                ++this._errorCount;\r\n                if (this._errorCount === 1) {\r\n                    if (this._onError != null) {\r\n                        if (!customError) {\r\n                            var error = {\r\n                                _message: (e as any).target.error.message,\r\n                                _type: (e as any).target.error.name\r\n                            } as IError;\r\n                            this._onError(error);\r\n                            logError(error);\r\n                        }\r\n                        else {\r\n                            this._onError(e);\r\n                            logError(e);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            protected onTransactionTimeout = function (e) {\r\n                console.error('transaction timed out');\r\n            };\r\n\r\n            protected onExceptionOccured = function (ex: DOMException, info) {\r\n                switch (ex.name) {\r\n                    case 'NotFoundError':\r\n                        var error = new Error(Error_Type.TableNotExist, info);\r\n                        this.onErrorOccured(error.get(), true);\r\n                        break;\r\n                    default: console.error(ex);\r\n                }\r\n            };\r\n\r\n            protected processAtsLogic = function (columnName, searchValue: string, occurence: Occurence) {\r\n                var table_name = this._tableName + \"_\" + columnName,\r\n                    key = this.getPrimaryKey(this._tableName),\r\n                    key_list = [],\r\n                    i = 0,\r\n                    possible_values = this.getAllCombinationOfWord(searchValue),\r\n                    length = possible_values.length,\r\n                    getKeyList = function () {\r\n                        var value = possible_values[i],\r\n                            cursor_request = this._transaction.objectStore(table_name).\r\n                                index(columnName).openCursor(\r\n                                IDBKeyRange.bound(value, value + '\\uffff'),\r\n                                'prev'\r\n                                ),\r\n                            cursor: IDBCursorWithValue;\r\n                        if (i + 1 === length) {\r\n                            cursor_request.onsuccess = function (e) {\r\n                                cursor = e.target.result;\r\n                                if (cursor) {\r\n                                    key_list.push(cursor.value[key]);\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    if (!this._errorOccured) {\r\n                                        if (occurence === Occurence.Any) {\r\n                                            delete this._query.Where[columnName];\r\n                                        }\r\n                                        this._query.Where[key] = {};\r\n                                        this._query.Where[key]['In'] = key_list.filter(function (item, pos) {\r\n                                            return key_list.indexOf(item) === pos;\r\n                                        });\r\n                                        this.goToWhereLogic(false);\r\n                                    }\r\n                                }\r\n                            }.bind(this);\r\n                        }\r\n                        else {\r\n                            cursor_request.onsuccess = function (e) {\r\n                                cursor = e.target.result;\r\n                                if (cursor) {\r\n                                    key_list.push(cursor.value[key]);\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    getKeyList(++i);\r\n                                }\r\n                            }.bind(this);\r\n                        }\r\n\r\n                        cursor_request.onerror = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    }.bind(this);\r\n                getKeyList(i);\r\n            };\r\n\r\n            protected goToWhereLogic = function (processAts = true) {\r\n                this._whereChecker = new WhereChecker(this._query.Where);\r\n                var column_name = getObjectFirstKey(this._query.Where);\r\n                if (this._query.IgnoreCase === true) {\r\n                    this._query.Where = this.makeQryInCaseSensitive(this._query.Where);\r\n                }\r\n                if (this._objectStore.indexNames.contains(column_name)) {\r\n                    var value = this._query.Where[column_name];\r\n                    if (typeof value === 'object') {\r\n                        this._checkFlag = Boolean(\r\n                            Object.keys(value).length > 1 ||\r\n                            Object.keys(this._query.Where).length > 1\r\n                        );\r\n                        var key = getObjectFirstKey(value);\r\n                        switch (key) {\r\n                            case 'Like': {\r\n                                var filter_values = value.Like.split('%'),\r\n                                    filter_value: string,\r\n                                    occurence: Occurence;\r\n                                if (filter_values[1]) {\r\n                                    filter_value = filter_values[1];\r\n                                    occurence = filter_values.length > 2 ? Occurence.Any : Occurence.Last;\r\n                                }\r\n                                else {\r\n                                    filter_value = filter_values[0];\r\n                                    occurence = Occurence.First;\r\n                                }\r\n                                if (processAts && this.isAtsColumn(column_name)) {\r\n                                    this.processAtsLogic(column_name, filter_value, occurence);\r\n                                }\r\n                                else {\r\n                                    this.executeLikeLogic(column_name, filter_value, occurence);\r\n                                }\r\n                            } break;\r\n                            case 'In':\r\n                                this.executeInLogic(column_name, value['In']);\r\n                                break;\r\n                            case '-':\r\n                            case '>':\r\n                            case '<':\r\n                            case '>=':\r\n                            case '<=':\r\n                                this.executeWhereLogic(column_name, value, key);\r\n                                break;\r\n                            case 'Aggregate': break;\r\n                            default: this.executeWhereLogic(column_name, value);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._checkFlag = Boolean(Object.keys(this._query.Where).length > 1);\r\n                        this.executeWhereLogic(column_name, value);\r\n                    }\r\n                }\r\n                else {\r\n                    this._errorOccured = true;\r\n                    this._error = new Error(Error_Type.ColumnNotExist, { ColumnName: column_name });\r\n                    this._error.throw();\r\n                }\r\n            };\r\n\r\n            protected makeQryInCaseSensitive = function (qry) {\r\n                var results = [],\r\n                    column_value,\r\n                    key_value;\r\n                for (var column in qry) {\r\n                    column_value = qry[column];\r\n                    if (typeof column_value === 'object') {\r\n                        for (var key in column_value) {\r\n                            key_value = column_value[key];\r\n                            switch (key) {\r\n                                case WhereQryOption.In:\r\n                                    results = results.concat(this.getAllCombinationOfWord(key_value, true));\r\n                                    break;\r\n                                case WhereQryOption.Like:\r\n                                    break;\r\n                                default:\r\n                                    results = results.concat(this.getAllCombinationOfWord(key_value));\r\n                            }\r\n                        }\r\n                        qry[column]['In'] = results;\r\n                    }\r\n                    else {\r\n                        results = results.concat(this.getAllCombinationOfWord(column_value));\r\n                        qry[column] = {\r\n                            In: results\r\n                        };\r\n                    }\r\n                }\r\n                return qry;\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class CreateDb {\r\n            constructor(tablesMetaData: Model.TableHelper[],\r\n                onSuccess: (listOf) => void, onError: (err: IError) => void) {\r\n                var table_created_list = [],\r\n                    db_request = indexedDB.open(active_db._name, db_version);\r\n\r\n                db_request.onerror = function (event) {\r\n                    if (onError != null) {\r\n                        onError((event as any).target.error);\r\n                    }\r\n                };\r\n\r\n                db_request.onsuccess = function (event) {\r\n                    status.ConStatus = Connection_Status.Connected;\r\n                    db_connection = db_request.result;\r\n                    (db_connection as any).onclose = function () {\r\n                        status.ConStatus = Connection_Status.Closed;\r\n                        status.LastError = Error_Type.ConnectionClosed;\r\n                    };\r\n\r\n                    db_connection.onversionchange = function (e) {\r\n                        if (e.newVersion === null) { // An attempt is made to delete the db\r\n                            (e.target as any).close(); // Manually close our connection to the db\r\n                        }\r\n                    };\r\n\r\n                    db_connection.onerror = function (e) {\r\n                        status.LastError = (\"Error occured in connection :\" + (e.target as any).result) as any;\r\n                    };\r\n\r\n                    db_connection.onabort = function (e) {\r\n                        status.ConStatus = Connection_Status.Closed;\r\n                        status.LastError = Error_Type.ConnectionAborted;\r\n                    };\r\n\r\n                    if (onSuccess != null) {\r\n                        onSuccess(table_created_list);\r\n                    }\r\n                };\r\n\r\n                db_request.onupgradeneeded = function (event) {\r\n                    db_connection = (event as any).target.result;\r\n                    tablesMetaData.forEach(function (item: Model.TableHelper, index) {\r\n                        if (item._requireDelete) {\r\n                            // Delete the old datastore.    \r\n                            if (db_connection.objectStoreNames.contains(item._name)) {\r\n                                db_connection.deleteObjectStore(item._name);\r\n                            }\r\n                            createObjectStore(item, index);\r\n                        }\r\n                        else if (item._requireCreation) {\r\n                            createObjectStore(item, index);\r\n                        }\r\n                    });\r\n                };\r\n\r\n                var createObjectStore = function (item: Model.TableHelper, index) {\r\n                    try {\r\n                        if (item._primaryKey.length > 0) {\r\n                            active_db._tables[index]._primaryKey = item._primaryKey;\r\n                            var store = db_connection.createObjectStore(item._name, {\r\n                                keyPath: item._primaryKey\r\n                            });\r\n                            item._columns.forEach(function (column: Column) {\r\n                                var options = column._primaryKey ? { unique: true } : { unique: column._unique };\r\n                                options['multiEntry'] = column._multiEntry;\r\n                                store.createIndex(column._name, column._name, options);\r\n                                if (column._autoIncrement) {\r\n                                    KeyStore.set(\r\n                                        \"JsStore_\" + active_db._name + \"_\" + item._name + \"_\" + column._name + \"_Value\",\r\n                                        0\r\n                                    );\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            var store = db_connection.createObjectStore(item._name, {\r\n                                autoIncrement: true\r\n                            });\r\n                            item._columns.forEach(function (column: Column) {\r\n                                var options = { unique: column._unique, multiEntry: column._multiEntry };\r\n                                store.createIndex(column._name, column._name, options);\r\n                                if (column._autoIncrement) {\r\n                                    KeyStore.set(\r\n                                        \"JsStore_\" + active_db._name + \"_\" + item._name + \"_\" + column._name + \"_Value\",\r\n                                        0\r\n                                    );\r\n                                }\r\n                            });\r\n                        }\r\n                        table_created_list.push(item._name);\r\n                        // setting the table version\r\n                        KeyStore.set(\"JsStore_\" + active_db._name + \"_\" + item._name + \"_Version\", item._version);\r\n                    }\r\n                    catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class DropDb {\r\n            constructor(name: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n                setTimeout(function () {\r\n                    this.deleteDb(name, onSuccess, onError);\r\n                }.bind(this), 100);\r\n            }\r\n\r\n            deleteDb = function (name: string, onSuccess: () => void, onError: (err: any) => void) {\r\n                var db_drop_request = indexedDB.deleteDatabase(name);\r\n                db_drop_request.onblocked = function () {\r\n                    if (onError != null) {\r\n                        onError(\"database is blocked, cant be deleted right now.\");\r\n                    }\r\n                };\r\n                db_drop_request.onerror = function (e) {\r\n                    if (onError != null) {\r\n                        onError((event as any).target.error);\r\n                    }\r\n                };\r\n                db_drop_request.onsuccess = function () {\r\n                    status.ConStatus = Connection_Status.Closed;\r\n                    KeyStore.remove('JsStore_' + active_db._name + '_Db_Version');\r\n                    active_db._tables.forEach(function (table: Model.Table) {\r\n                        KeyStore.remove(\"JsStore_\" + active_db._name + \"_\" + table._name + \"_Version\");\r\n                        table._columns.forEach(function (column: Column) {\r\n                            if (column._autoIncrement) {\r\n                                KeyStore.remove(\r\n                                    \"JsStore_\" + active_db._name + \"_\" + table._name + \"_\" + column._name + \"_Value\"\r\n                                );\r\n                            }\r\n                        });\r\n                    });\r\n                    KeyStore.remove(\"JsStore_\" + active_db._name + \"_Schema\", onSuccess);\r\n                };\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class BulkInsert extends Base {\r\n            _query: IInsert;\r\n            constructor(query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n                super();\r\n                try {\r\n                    this._query = query;\r\n                    this._onSuccess = onSuccess;\r\n                    this._onError = onError;\r\n                    if (this.getTable(query.Into)) {\r\n                        this.bulkinsertData();\r\n                    }\r\n                    else {\r\n                        var error = new Error(Error_Type.TableNotExist, { TableName: query.Into });\r\n                        error.throw();\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    this.onExceptionOccured(ex, { TableName: query.Into });\r\n                }\r\n            }\r\n\r\n            private bulkinsertData = function () {\r\n                this._transaction = db_connection.transaction([this._query.Into], \"readwrite\");\r\n                this._objectStore = this._transaction.objectStore(this._query.Into);\r\n                this._transaction.oncomplete = function (e) {\r\n                    this._onSuccess();\r\n                }.bind(this);\r\n                this._query.Values.forEach(function (value) {\r\n                    this._objectStore.add(value);\r\n                }, this);\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class OpenDb {\r\n            constructor(dbVersion, onSuccess: () => void, onError: (err: IError) => void) {\r\n                if (active_db._name.length > 0) {\r\n                    var db_request = indexedDB.open(active_db._name, dbVersion);\r\n\r\n                    db_request.onerror = function (event) {\r\n                        if (onError != null) {\r\n                            onError((event as any).target.error);\r\n                        }\r\n                    };\r\n\r\n                    db_request.onsuccess = function (event) {\r\n                        status.ConStatus = Connection_Status.Connected;\r\n                        db_connection = db_request.result;\r\n                        (db_connection as any).onclose = function () {\r\n                            status.ConStatus = Connection_Status.Closed;\r\n                            status.LastError = Error_Type.ConnectionClosed;\r\n                        };\r\n\r\n                        db_connection.onversionchange = function (e) {\r\n                            if (e.newVersion === null) { // An attempt is made to delete the db\r\n                                (e.target as any).close(); // Manually close our connection to the db\r\n                            }\r\n                        };\r\n\r\n                        db_connection.onerror = function (e) {\r\n                            status.LastError = (\"Error occured in connection :\" + (e.target as any).result) as any;\r\n                        };\r\n\r\n                        db_connection.onabort = function (e) {\r\n                            status.ConStatus = Connection_Status.Closed;\r\n                            status.LastError = Error_Type.ConnectionAborted;\r\n                        };\r\n\r\n                        if (onSuccess != null) {\r\n                            onSuccess();\r\n                        }\r\n                        this.setPrimaryKey();\r\n                    }.bind(this);\r\n                }\r\n                else {\r\n                    var error = new Error(Error_Type.UndefinedDbName);\r\n                    error.throw();\r\n                }\r\n            }\r\n\r\n            private setPrimaryKey = function () {\r\n                active_db._tables.forEach(function (table: Table, index) {\r\n                    table._columns.every(function (item) {\r\n                        active_db._tables[index]._primaryKey = item._primaryKey ? item._name : \"\";\r\n                        return !item._primaryKey;\r\n                    });\r\n                });\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export class Clear extends Base {\r\n            constructor(tableName: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n                super();\r\n                var object_store: IDBObjectStore =\r\n                    db_connection.transaction([tableName], \"readwrite\").objectStore(tableName)\r\n                    , clear_request = object_store.clear();\r\n\r\n                clear_request.onsuccess = function (e) {\r\n                    var current_table = this.getTable(tableName);\r\n                    current_table._columns.forEach(function (column: Column) {\r\n                        if (column._autoIncrement) {\r\n                            KeyStore.set(\r\n                                \"JsStore_\" + active_db._name + \"_\" + tableName + \"_\" + column._name + \"_Value\",\r\n                                0\r\n                            );\r\n                        }\r\n                    });\r\n                    if (onSuccess != null) {\r\n                        onSuccess();\r\n                    }\r\n                }.bind(this);\r\n\r\n                clear_request.onerror = function (e) {\r\n                    if (onError != null) {\r\n                        onError(e as any);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nnamespace JsStore {\r\n    export namespace Business {\r\n        export var db_connection: IDBDatabase,\r\n            active_db: DataBase;\r\n\r\n        export class Main {\r\n            _onSuccess: () => void;\r\n\r\n            constructor(onSuccess = null) {\r\n                this._onSuccess = onSuccess;\r\n            }\r\n\r\n            public checkConnectionAndExecuteLogic = function (request: IWebWorkerRequest) {\r\n                log('checking connection and executing request:' + request.Name);\r\n                switch (request.Name) {\r\n                    case 'create_db':\r\n                    case 'open_db':\r\n                        this.executeLogic(request);\r\n                        break;\r\n                    case 'change_log_status':\r\n                        this.changeLogStatus(request);\r\n                    default:\r\n                        switch (status.ConStatus) {\r\n                            case Connection_Status.Connected: {\r\n                                this.executeLogic(request);\r\n                            } break;\r\n                            case Connection_Status.Closed: {\r\n                                this.openDb(active_db._name, function () {\r\n                                    this.checkConnectionAndExecuteLogic(request);\r\n                                }.bind(this));\r\n                            } break;\r\n                        }\r\n                }\r\n            };\r\n\r\n            private changeLogStatus = function (request: IWebWorkerRequest) {\r\n                if (request.Query['logging'] === true) {\r\n                    enable_log = true;\r\n                }\r\n                else {\r\n                    enable_log = false;\r\n                }\r\n            };\r\n\r\n            private returnResult = function (result) {\r\n                if (this._onSuccess) {\r\n                    this._onSuccess(result);\r\n                }\r\n                else {\r\n                    (self as any).postMessage(result);\r\n                }\r\n            };\r\n\r\n            private executeLogic = function (request: IWebWorkerRequest) {\r\n                var onSuccess = function (results) {\r\n                    this.returnResult({\r\n                        ReturnedValue: results\r\n                    } as IWebWorkerResult);\r\n                }.bind(this),\r\n                    onError = function (err) {\r\n                        this.returnResult({\r\n                            ErrorDetails: err,\r\n                            ErrorOccured: true\r\n                        } as IWebWorkerResult);\r\n                    }.bind(this);\r\n\r\n                switch (request.Name) {\r\n                    case 'select':\r\n                        this.select(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'insert': this.insert(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'update': this.update(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'delete': this.delete(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'open_db': this.openDb(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'create_db': this.createDb(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'clear': this.clear(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'drop_db': this.dropDb(onSuccess, onError);\r\n                        break;\r\n                    case 'count': this.count(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'bulk_insert': this.bulkInsert(request.Query, onSuccess, onError);\r\n                        break;\r\n                    case 'export_json': this.exportJson(request.Query, onSuccess, onError);\r\n                        break;\r\n                    default: console.error('The Api:-' + request.Name + 'does not support');\r\n                }\r\n            };\r\n\r\n            private openDb = function (dbName, onSuccess: () => void, onError: (err: IError) => void) {\r\n                getDbVersion(dbName, function (dbVersion) {\r\n                    if (dbVersion != null) {\r\n                        getDbSchema(dbName, function (result) {\r\n                            active_db = result;\r\n                            var open_db_object = new OpenDb(dbVersion, onSuccess, onError);\r\n                        });\r\n                    }\r\n                    else {\r\n                        var error = new Error(Error_Type.DbNotExist, { DbName: dbName });\r\n                        error.throw();\r\n                    }\r\n                });\r\n            };\r\n\r\n            private closeDb = function () {\r\n                if (status.ConStatus === Connection_Status.Connected) {\r\n                    db_connection.close();\r\n                }\r\n            };\r\n\r\n            private dropDb = function (onSuccess: () => void, onError: (err: IError) => void) {\r\n                this.closeDb();\r\n                var drop_db_object = new DropDb(active_db._name, onSuccess, onError);\r\n            };\r\n\r\n            private update = function (query: IUpdate, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var update_db_object = new Update.Instance(query, onSuccess, onError);\r\n            };\r\n\r\n            private insert = function (query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n                if (!Array.isArray(query.Values)) {\r\n                    var erro_obj = new Error(Error_Type.NotArray);\r\n                    erro_obj.logError();\r\n                    onError(erro_obj.get());\r\n                }\r\n                else {\r\n                    var insert_object = new Business.Insert.Instance(query, onSuccess, onError);\r\n                }\r\n            };\r\n\r\n            private bulkInsert = function (query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n                if (!Array.isArray(query.Values)) {\r\n                    var erro_obj = new Error(Error_Type.NotArray);\r\n                    erro_obj.logError();\r\n                    onError(erro_obj.get());\r\n                }\r\n                else {\r\n                    var bulk_insert_object = new BulkInsert(query, onSuccess, onError);\r\n                }\r\n            };\r\n\r\n            private delete = function (query: IDelete, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var delete_object = new Delete.Instance(query, onSuccess, onError);\r\n            };\r\n\r\n            private select = function (query, onSuccess: () => void, onError: (err: IError) => void) {\r\n                if (typeof query.From === 'object') {\r\n                    var select_join_object = new Select.Join(query as ISelectJoin, onSuccess, onError);\r\n                }\r\n                else {\r\n                    var select_object = new Select.Instance(query, onSuccess, onError);\r\n                }\r\n            };\r\n\r\n            private count = function (query, onSuccess: () => void, onError: (err: IError) => void) {\r\n                if (typeof query.From === 'object') {\r\n                    query['Count'] = true;\r\n                    var select_join_object = new Select.Join(query, onSuccess, onError);\r\n                }\r\n                else {\r\n                    var count_object = new Count.Instance(query, onSuccess, onError);\r\n                }\r\n            };\r\n\r\n            private createDb = function (\r\n                dataBase: IDataBaseOption, onSuccess: () => void, onError: (err: IError) => void\r\n            ) {\r\n                this.closeDb();\r\n                KeyStore.get(\"JsStore_\" + dataBase.Name + \"_Db_Version\", function (version) {\r\n                    db_version = version ? version : 1;\r\n                    active_db = new Model.DataBase(dataBase);\r\n                    // save dbSchema in keystore\r\n                    KeyStore.set(\"JsStore_\" + active_db._name + \"_Schema\", active_db);\r\n                    // create meta data\r\n                    var db_helper = new Model.DbHelper(active_db);\r\n                    db_helper.createMetaData(function (tablesMetaData: Model.TableHelper[]) {\r\n                        var create_db_object = new CreateDb(tablesMetaData, onSuccess, onError);\r\n                    });\r\n                });\r\n\r\n            };\r\n\r\n            private clear = function (tableName: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n                var clear_object = new Clear(tableName, onSuccess, onError);\r\n            };\r\n\r\n            private exportJson = function (\r\n                query: ISelect, onSuccess: (url: string) => void, onError: (err: IError) => void) {\r\n                this.select(query, function (results) {\r\n                    var url = URL.createObjectURL(new Blob([JSON.stringify(results)], {\r\n                        type: \"text/json\"\r\n                    }));\r\n                    onSuccess(url);\r\n                }, function (err) {\r\n                    onError(err);\r\n                });\r\n            };\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n  export namespace Business {\r\n\r\n    /**\r\n     * For matching the different column value existance for where option\r\n     * \r\n     * @export\r\n     * @class WhereChecker\r\n     */\r\n    export class WhereChecker {\r\n      _where;\r\n      _status;\r\n\r\n      constructor(where) {\r\n        this._where = where;\r\n      }\r\n\r\n      check = function (rowValue) {\r\n        this._status = true;\r\n        var column_value;\r\n        for (var columnName in this._where) {\r\n          if (this._status) {\r\n            column_value = this._where[columnName];\r\n            if (typeof column_value === 'object') {\r\n              for (var key in column_value) {\r\n                if (this._status) {\r\n                  switch (key) {\r\n                    case 'In': this.checkIn(columnName, rowValue[columnName]); break;\r\n                    case 'Like': this.checkLike(columnName, rowValue[columnName]); break;\r\n                    case '-':\r\n                    case '>':\r\n                    case '<':\r\n                    case '>=':\r\n                    case '<=':\r\n                      this.checkComparisionOp(columnName, rowValue[columnName], key);\r\n                      break;\r\n                  }\r\n                }\r\n                else {\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              if (column_value !== rowValue[columnName]) {\r\n                this._status = false;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            break;\r\n          }\r\n        }\r\n        return this._status;\r\n      };\r\n\r\n      private checkIn = function (column, value) {\r\n        for (var i = 0, values = this._where[column].In, length = values.length; i < length; i++) {\r\n          if (values[i] === value) {\r\n            this._status = true;\r\n            break;\r\n          }\r\n          else {\r\n            this._status = false;\r\n          }\r\n        }\r\n      };\r\n\r\n      private checkLike = function (column, value) {\r\n        var values = this._where[column].Like.split('%'),\r\n          comp_symbol: Occurence,\r\n          comp_value,\r\n          symbol_index;\r\n        if (values[1]) {\r\n          comp_value = values[1];\r\n          comp_symbol = values.length > 2 ? Occurence.Any : Occurence.Last;\r\n        }\r\n        else {\r\n          comp_value = values[0];\r\n          comp_symbol = Occurence.First;\r\n        }\r\n        value = value.toLowerCase();\r\n\r\n        switch (comp_symbol) {\r\n          case Occurence.Any:\r\n            symbol_index = value.indexOf(comp_value.toLowerCase());\r\n            if (symbol_index < 0) {\r\n              this._status = false;\r\n            } break;\r\n          case Occurence.First:\r\n            symbol_index = value.indexOf(comp_value.toLowerCase());\r\n            if (symbol_index > 0 || symbol_index < 0) {\r\n              this._status = false;\r\n            } break;\r\n          default:\r\n            symbol_index = value.lastIndexOf(comp_value.toLowerCase());\r\n            if (symbol_index < value.length - comp_value.length) {\r\n              this._status = false;\r\n            }\r\n        }\r\n      };\r\n\r\n      private checkComparisionOp = function (column, value, symbol) {\r\n        var compare_value = this._where[column][symbol];\r\n        switch (symbol) {\r\n          // greater than\r\n          case '>': if (value <= compare_value) {\r\n            this._status = false;\r\n          } break;\r\n          // less than\r\n          case '<': if (value >= compare_value) {\r\n            this._status = false;\r\n          } break;\r\n          // less than equal\r\n          case '<=': if (value > compare_value) {\r\n            this._status = false;\r\n          } break;\r\n          // greather than equal\r\n          case '>=': if (value < compare_value) {\r\n            this._status = false;\r\n          } break;\r\n          // between\r\n          case '-': if (value < compare_value.Low || value > compare_value.High) {\r\n            this._status = false;\r\n          } break;\r\n        }\r\n      };\r\n    }\r\n  }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class BaseSelect extends Base {\r\n                _results = [];\r\n                _sorted: boolean = false;\r\n                _skipRecord;\r\n                _limitRecord;\r\n                _checkFlag = false;\r\n\r\n                protected removeDuplicates = function () {\r\n                    var datas = this._results;\r\n                    // free results memory\r\n                    this._results = undefined;\r\n                    var key = this.getPrimaryKey(this._query.From);\r\n                    var lookupObject = {};\r\n                    for (var i in datas) {\r\n                        lookupObject[datas[i][key]] = datas[i];\r\n                    }\r\n                    // free datas memory\r\n                    datas = [];\r\n                    for (i in lookupObject) {\r\n                        datas.push(lookupObject[i]);\r\n                    }\r\n                    this._results = datas;\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class NotWhere extends BaseSelect {\r\n                protected executeWhereUndefinedLogic = function () {\r\n                    if (this._query.Order && this._query.Order.By) {\r\n                        if (this._objectStore.indexNames.contains(this._query.Order.By)) {\r\n                            var order_type = this._query.Order.Type &&\r\n                                this._query.Order.Type.toLowerCase() === 'desc' ? 'prev' : 'next';\r\n                            this._sorted = true;\r\n                            this._cursorOpenRequest = this._objectStore.index(this._query.Order.By).\r\n                                openCursor(null, order_type);\r\n                        }\r\n                        else {\r\n                            var error = new Error(Error_Type.ColumnNotExist, { ColumnName: this._query.Order.By });\r\n                            error.throw();\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest = this._objectStore.openCursor();\r\n                    }\r\n\r\n                    if (this._skipRecord && this._limitRecord) {\r\n                        this.executeSkipAndLimitForNoWhere();\r\n                    }\r\n                    else if (this._skipRecord) {\r\n                        this.executeSkipForNoWhere();\r\n                    }\r\n                    else if (this._limitRecord) {\r\n                        this.executeLimitForNotWhere();\r\n                    }\r\n                    else {\r\n                        this.executeSimpleForNotWhere();\r\n                    }\r\n\r\n                    this._cursorOpenRequest.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n\r\n                };\r\n\r\n                private executeSkipAndLimitForNoWhere = function () {\r\n                    var record_skipped = false,\r\n                        cursor: IDBCursorWithValue;\r\n                    this._cursorOpenRequest.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor) {\r\n                            if (record_skipped && this._results.length !== this._limitRecord) {\r\n                                this._results.push(cursor.value);\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                record_skipped = true;\r\n                                cursor.advance(this._skipRecord);\r\n                            }\r\n                        }\r\n                    }.bind(this);\r\n                };\r\n\r\n                private executeSkipForNoWhere = function () {\r\n                    var record_skipped = false,\r\n                        cursor;\r\n                    this._cursorOpenRequest.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor) {\r\n                            if (record_skipped) {\r\n                                this._results.push(cursor.value);\r\n                                cursor.continue();\r\n                            }\r\n                            else {\r\n                                record_skipped = true;\r\n                                cursor.advance(this._skipRecord);\r\n                            }\r\n                        }\r\n                    }.bind(this);\r\n                };\r\n\r\n                private executeSimpleForNotWhere = function () {\r\n                    var cursor;\r\n                    this._cursorOpenRequest.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor) {\r\n                            this._results.push(cursor.value);\r\n                            (cursor as any).continue();\r\n                        }\r\n\r\n                    }.bind(this);\r\n                };\r\n\r\n                private executeLimitForNotWhere = function () {\r\n                    var cursor;\r\n                    this._cursorOpenRequest.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor && this._results.length !== this._limitRecord) {\r\n                            this._results.push(cursor.value);\r\n                            cursor.continue();\r\n                        }\r\n                    }.bind(this);\r\n                };\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class In extends NotWhere {\r\n                protected executeInLogic = function (column, values) {\r\n                    if (this._skipRecord && this._limitRecord) {\r\n                        this.executeSkipAndLimitForIn(column, values);\r\n                    }\r\n                    else if (this._skipRecord) {\r\n                        this.executeSkipForIn(column, values);\r\n                    }\r\n                    else if (this._limitRecord) {\r\n                        this.executeLimitForIn(column, values);\r\n                    }\r\n                    else {\r\n                        this.executeSimpleForIn(column, values);\r\n                    }\r\n                };\r\n\r\n                private executeSkipAndLimitForIn = function (column, values) {\r\n                    var skip = this._skipRecord,\r\n                        column_store = this._objectStore.index(column),\r\n                        skipOrPush = function (value) {\r\n                            if (skip === 0) {\r\n                                this._results.push(value);\r\n                            }\r\n                            else {\r\n                                --skip;\r\n                            }\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                var cursor: IDBCursorWithValue,\r\n                                    cursor_request: IDBRequest = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (this._results.length !== this._limitRecord && cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            skipOrPush(cursor.value);\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n\r\n                                cursor_request.onerror = function (e) {\r\n                                    this._errorOccured = true;\r\n                                    this.onErrorOccured(e);\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                var cursor: IDBCursorWithValue,\r\n                                    cursor_request: IDBRequest = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (this._results.length !== this._limitRecord && cursor) {\r\n                                        skipOrPush(cursor.value);\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n\r\n                                cursor_request.onerror = function (e) {\r\n                                    this._errorOccured = true;\r\n                                    this.onErrorOccured(e);\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                private executeSkipForIn = function (column, values) {\r\n                    var skip = this._skipRecord,\r\n                        column_store = this._objectStore.index(column),\r\n                        skipOrPush = function (value) {\r\n                            if (skip === 0) {\r\n                                this._results.push(value);\r\n                            }\r\n                            else {\r\n                                --skip;\r\n                            }\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                var cursor: IDBCursorWithValue,\r\n                                    cursor_request: IDBRequest = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            skipOrPush((cursor.value));\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n\r\n                                cursor_request.onerror = function (e) {\r\n                                    this._errorOccured = true;\r\n                                    this.onErrorOccured(e);\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                var cursor: IDBCursorWithValue,\r\n                                    cursor_request: IDBRequest = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        skipOrPush((cursor.value));\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n\r\n                                cursor_request.onerror = function (e) {\r\n                                    this._errorOccured = true;\r\n                                    this.onErrorOccured(e);\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                private executeLimitForIn = function (column, values) {\r\n                    var column_store = this._objectStore.index(column);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                var cursor: IDBCursorWithValue,\r\n                                    cursor_request: IDBRequest = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor && this._results.length !== this._limitRecord) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            this._results.push(cursor.value);\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n\r\n                                cursor_request.onerror = function (e) {\r\n                                    this._errorOccured = true;\r\n                                    this.onErrorOccured(e);\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                var cursor: IDBCursorWithValue,\r\n                                    cursor_request: IDBRequest = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor && this._results.length !== this._limitRecord) {\r\n                                        this._results.push(cursor.value);\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n\r\n                                cursor_request.onerror = function (e) {\r\n                                    this._errorOccured = true;\r\n                                    this.onErrorOccured(e);\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                private executeSimpleForIn = function (column, values) {\r\n                    var column_store = this._objectStore.index(column);\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                var cursor: IDBCursorWithValue,\r\n                                    cursor_request: IDBRequest = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            this._results.push(cursor.value);\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n\r\n                                cursor_request.onerror = function (e) {\r\n                                    this._errorOccured = true;\r\n                                    this.onErrorOccured(e);\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                var cursor: IDBCursorWithValue,\r\n                                    cursor_request: IDBRequest = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        this._results.push(cursor.value);\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n\r\n                                cursor_request.onerror = function (e) {\r\n                                    this._errorOccured = true;\r\n                                    this.onErrorOccured(e);\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class Like extends In {\r\n                _compSymbol: Occurence;\r\n                _compValue;\r\n                _compValueLength: number;\r\n\r\n                protected executeLikeLogic = function (column, value, symbol: Occurence) {\r\n                    this._compValue = (value as string).toLowerCase();\r\n                    this._compValueLength = this._compValue.length;\r\n                    this._compSymbol = symbol;\r\n                    this._cursorOpenRequest = this._objectStore.index(column).openCursor();\r\n                    this._cursorOpenRequest.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                    if (this._skipRecord && this._limitRecord) {\r\n                        this.executeSkipAndLimit();\r\n                    }\r\n                    else if (this._skipRecord) {\r\n                        this.executeSkip();\r\n                    }\r\n                    else if (this._limitRecord) {\r\n                        this.executeLimit();\r\n                    }\r\n                    else {\r\n                        this.executeSimple();\r\n                    }\r\n                };\r\n\r\n                private executeSkipAndLimit = function () {\r\n                    var cursor: IDBCursorWithValue,\r\n                        skip = this._skipRecord,\r\n                        skipOrPush = function (value) {\r\n                            if (skip === 0) {\r\n                                this._results.push(value);\r\n                            }\r\n                            else {\r\n                                --skip;\r\n                            }\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (this._results.length !== this._limitRecord && cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    skipOrPush(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (this._results.length !== this._limitRecord && cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    skipOrPush(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n\r\n                private executeSkip = function () {\r\n                    var cursor: IDBCursorWithValue,\r\n                        skip = this._skipRecord,\r\n                        skipOrPush = function (value) {\r\n                            if (skip === 0) {\r\n                                this._results.push(value);\r\n                            }\r\n                            else {\r\n                                --skip;\r\n                            }\r\n                        }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    skipOrPush((cursor.value));\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    skipOrPush((cursor.value));\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n\r\n                private executeLimit = function () {\r\n                    var cursor: IDBCursorWithValue;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (this._results.length !== this._limitRecord && cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    this._results.push(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (this._results.length !== this._limitRecord && cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    this._results.push(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n\r\n                private executeSimple = function () {\r\n                    var cursor: IDBCursorWithValue;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    this._results.push(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    this._results.push(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class Where extends Like {\r\n                private executeSkipAndLimitForWhere = function () {\r\n                    var record_skipped = false,\r\n                        cursor;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (record_skipped && this._results.length !== this._limitRecord) {\r\n                                    if (this._whereChecker.check(cursor.value)) {\r\n                                        this._results.push(cursor.value);\r\n                                    }\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    record_skipped = true;\r\n                                    cursor.advance(this._skipRecord);\r\n                                }\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (record_skipped && this._results.length !== this._limitRecord) {\r\n                                    this._results.push(cursor.value);\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    record_skipped = true;\r\n                                    cursor.advance(this._skipRecord);\r\n                                }\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n\r\n                private executeSkipForWhere = function () {\r\n                    var record_skipped = false,\r\n                        cursor;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (record_skipped) {\r\n                                    if (this._whereChecker.check(cursor.value)) {\r\n                                        this._results.push(cursor.value);\r\n                                    }\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    record_skipped = true;\r\n                                    cursor.advance(this._skipRecord);\r\n                                }\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (record_skipped) {\r\n                                    this._results.push(cursor.value);\r\n                                    cursor.continue();\r\n                                }\r\n                                else {\r\n                                    record_skipped = true;\r\n                                    cursor.advance(this._skipRecord);\r\n                                }\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n\r\n                private executeLimitForWhere = function () {\r\n                    var cursor;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor && this._results.length !== this._limitRecord &&\r\n                                this._whereChecker.check(cursor.value)) {\r\n                                this._results.push(cursor.value);\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor && this._results.length !== this._limitRecord) {\r\n                                this._results.push(cursor.value);\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n\r\n                private executeSimpleForWhere = function () {\r\n                    var cursor;\r\n                    if (this._checkFlag) {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this._whereChecker.check(cursor.value)) {\r\n                                    this._results.push(cursor.value);\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this._cursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                this._results.push(cursor.value);\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n\r\n                private executeWhereLogic = function (column, value, op) {\r\n                    value = op ? value[op] : value;\r\n                    this._cursorOpenRequest = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n\r\n                    this._cursorOpenRequest.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n\r\n                    if (this._skipRecord && this._limitRecord) {\r\n                        this.executeSkipAndLimitForWhere();\r\n                    }\r\n                    else if (this._skipRecord) {\r\n                        this.executeSkipForWhere();\r\n                    }\r\n                    else if (this._limitRecord) {\r\n                        this.executeLimitForWhere();\r\n                    }\r\n                    else {\r\n                        this.executeSimpleForWhere();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class Join extends BaseSelect {\r\n                _query: ISelectJoin;\r\n                _queryStack: ITableJoin[] = [];\r\n                _currentQueryStackIndex = 0;\r\n\r\n                constructor(query: ISelectJoin, onSuccess: (results: any[]) => void, onError: (err: IError) => void) {\r\n                    super();\r\n                    this._onSuccess = onSuccess;\r\n                    this._onError = onError;\r\n                    this._query = query;\r\n                    var table_list = []; // used to open the multiple object store\r\n\r\n                    var convertQueryIntoStack = function (qry) {\r\n                        if (qry.hasOwnProperty('Table1')) {\r\n                            qry.Table2['JoinType'] = (qry as IJoin).Join === undefined ?\r\n                                'inner' : (qry as IJoin).Join.toLowerCase();\r\n                            this._queryStack.push(qry.Table2);\r\n                            if (this._queryStack.length % 2 === 0) {\r\n                                this._queryStack[this._queryStack.length - 1].NextJoin = qry.NextJoin;\r\n                            }\r\n                            table_list.push(qry.Table2.Table);\r\n                            return convertQueryIntoStack(qry.Table1);\r\n                        }\r\n                        else {\r\n                            this._queryStack.push(qry);\r\n                            table_list.push(qry.Table);\r\n                            return;\r\n                        }\r\n                    }.bind(this);\r\n                    convertQueryIntoStack(query.From);\r\n                    this._queryStack.reverse();\r\n                    // get the data for first table\r\n                    if (!this._errorOccured) {\r\n                        var select_object = new Select.Instance({\r\n                            From: this._queryStack[0].Table,\r\n                            Where: this._queryStack[0].Where\r\n                        } as ISelect, function (results) {\r\n                            var table_name = this._queryStack[0].Table;\r\n                            results.forEach(function (item, index) {\r\n                                this._results[index] = {};\r\n                                this._results[index][table_name] = item;\r\n                            }, this);\r\n                            this.startExecutionJoinLogic();\r\n                        }.bind(this), this.onErrorOccured.bind(this));\r\n                    }\r\n                }\r\n\r\n                private onTransactionCompleted = function (e) {\r\n                    if (this._onSuccess != null && (this._queryStack.length === this._currentQueryStackIndex + 1)) {\r\n                        if (this._query['Count']) {\r\n                            this._onSuccess(this._results.length);\r\n                        }\r\n                        else {\r\n                            if (this._query['Skip'] && this._query['Limit']) {\r\n                                this._results.splice(0, this._query['Skip']);\r\n                                this._results.splice(this._query['Limit'] - 1, this._results.length);\r\n                            }\r\n                            else if (this._query['Skip']) {\r\n                                this._results.splice(0, this._query['Skip']);\r\n                            }\r\n                            else if (this._query['Limit']) {\r\n                                this._results.splice(this._query['Limit'] - 1, this._results.length);\r\n                            }\r\n                            this._onSuccess(this._results);\r\n                        }\r\n\r\n                    }\r\n                };\r\n\r\n                private executeWhereJoinLogic = function (joinQuery: ITableJoin, query: ITableJoin) {\r\n                    var results = [],\r\n                        join_index = 0,\r\n                        column = query.Column,\r\n                        tmp_results = this._results,\r\n                        item,\r\n                        result_length = tmp_results.length;\r\n\r\n                    // get the data from query table\r\n                    var select_object = new Select.Instance({\r\n                        From: query.Table,\r\n                        Where: query.Where,\r\n                        Order: query.Order\r\n                    } as ISelect, function (selectResults) {\r\n                        // perform join\r\n                        selectResults.forEach(function (value, index) {\r\n                            // search item through each global result\r\n                            for (var i = 0; i < result_length; i++) {\r\n                                item = tmp_results[i][joinQuery.Table][joinQuery.Column];\r\n                                doJoin(item, value, i);\r\n                            }\r\n                        });\r\n                        this._results = results;\r\n                        // check if further execution needed\r\n                        if (this._queryStack.length > this._currentQueryStackIndex + 1) {\r\n                            this.startExecutionJoinLogic();\r\n                        }\r\n                        else {\r\n                            this.onTransactionCompleted(null);\r\n                        }\r\n\r\n                    }.bind(this), this.onErrorOccured.bind(this));\r\n\r\n                    var doJoin = function (value1, value2, itemIndex) {\r\n                        results[join_index] = {};\r\n                        if (value1 === value2[query.Column]) {\r\n                            results[join_index][query.Table] = value2;\r\n                            // copy other relative data into current result\r\n                            for (var j = 0; j < this._currentQueryStackIndex; j++) {\r\n                                results[join_index][this._queryStack[j].Table] =\r\n                                    tmp_results[itemIndex][this._queryStack[j].Table];\r\n                            }\r\n                            ++join_index;\r\n                        }\r\n                        else if (query.JoinType === 'left') {\r\n                            // left join\r\n                            results[join_index] = {};\r\n                            results[join_index][query.Table] = null;\r\n                            // copy other relative data into current result\r\n                            for (var j = 0; j < this._currentQueryStackIndex; j++) {\r\n                                results[join_index][this._queryStack[j].Table] =\r\n                                    tmp_results[itemIndex][this._queryStack[j].Table];\r\n                            }\r\n                            // results[JoinIndex][joinQuery.Table] = TmpResults[ItemIndex][joinQuery.Table];\r\n                            ++join_index;\r\n                        }\r\n                    }.bind(this);\r\n                };\r\n\r\n                private executeRightJoin = function (joinQuery: ITableJoin, query: ITableJoin) {\r\n                    var join_results = [],\r\n                        join_index = 0,\r\n                        column = query.Column,\r\n                        tmp_results = this._results,\r\n                        result_length = tmp_results.length,\r\n                        item_index = 0,\r\n                        where = {},\r\n                        onExecutionFinished = function () {\r\n                            this._results = join_results;\r\n                            // check if further execution needed\r\n                            if (this._queryStack.length > this._currentQueryStackIndex + 1) {\r\n                                this.startExecutionJoinLogic();\r\n                            }\r\n                            else {\r\n                                this.onTransactionCompleted(null);\r\n                            }\r\n                        }.bind(this),\r\n                        doRightJoin = function (results) {\r\n                            var value_found = false;\r\n                            results.forEach(function (item, index) {\r\n                                for (item_index = 0; item_index < result_length; item_index++) {\r\n                                    if (item[query.Column] ===\r\n                                        tmp_results[item_index][joinQuery.Table][joinQuery.Column]) {\r\n                                        value_found = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                join_results[index] = {};\r\n                                join_results[index][query.Table] = item;\r\n                                if (value_found) {\r\n                                    value_found = false;\r\n                                    for (var j = 0; j < this._currentQueryStackIndex; j++) {\r\n                                        join_results[index][this._queryStack[j].Table] =\r\n                                            tmp_results[item_index][this._queryStack[j].Table];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    for (var j = 0; j < this._currentQueryStackIndex; j++) {\r\n                                        join_results[index][this._queryStack[j].Table] = null;\r\n                                    }\r\n                                }\r\n                            }, this);\r\n                        }.bind(this),\r\n                        executeLogic = function () {\r\n                            var select_object = new Select.Instance({\r\n                                From: query.Table,\r\n                                Where: query.Where,\r\n                                Order: query.Order\r\n                            } as ISelect, function (results) {\r\n                                doRightJoin(results);\r\n                                onExecutionFinished();\r\n                            }.bind(this), this.onErrorOccured.bind(this));\r\n                        }.bind(this);\r\n                    executeLogic();\r\n                };\r\n\r\n                private executeWhereUndefinedLogicForJoin = function (joinQuery: ITableJoin, query: ITableJoin) {\r\n                    var join_results = [],\r\n                        join_index = 0,\r\n                        column = query.Column,\r\n                        tmp_results = this._results,\r\n                        // Item,\r\n                        result_length = tmp_results.length,\r\n                        item_index = 0,\r\n                        where = {},\r\n                        onExecutionFinished = function () {\r\n                            this._results = join_results;\r\n                            // check if further execution needed\r\n                            if (this._queryStack.length > this._currentQueryStackIndex + 1) {\r\n                                this.startExecutionJoinLogic();\r\n                            }\r\n                            else {\r\n                                this.onTransactionCompleted(null);\r\n                            }\r\n                        }.bind(this),\r\n                        doJoin = function (results) {\r\n                            if (results.length > 0) {\r\n                                results.forEach(function (value) {\r\n                                    join_results[join_index] = {};\r\n                                    join_results[join_index][query.Table] = value;\r\n                                    // copy other relative data into current result\r\n                                    for (var k = 0; k < this._currentQueryStackIndex; k++) {\r\n                                        join_results[join_index][this._queryStack[k].Table] =\r\n                                            tmp_results[item_index][this._queryStack[k].Table];\r\n                                    }\r\n                                    ++join_index;\r\n                                }, this);\r\n                            }\r\n                            else if (query.JoinType === 'left') {\r\n                                // left join\r\n                                join_results[join_index] = {};\r\n                                join_results[join_index][query.Table] = null;\r\n                                // copy other relative data into current result\r\n                                for (var j = 0; j < this._currentQueryStackIndex; j++) {\r\n                                    join_results[join_index][this._queryStack[j].Table] =\r\n                                        tmp_results[item_index][this._queryStack[j].Table];\r\n                                }\r\n                                ++join_index;\r\n                            }\r\n                        }.bind(this),\r\n                        executeLogic = function () {\r\n                            if (item_index < result_length) {\r\n                                if (!this._errorOccured) {\r\n                                    where[query.Column] = tmp_results[item_index][joinQuery.Table][joinQuery.Column];\r\n                                    var select_object = new Select.Instance({\r\n                                        From: query.Table,\r\n                                        Where: where,\r\n                                        Order: query.Order\r\n                                    } as ISelect, function (results) {\r\n                                        doJoin(results);\r\n                                        ++item_index;\r\n                                        executeLogic();\r\n                                    }.bind(this), this.onErrorOccured.bind(this));\r\n                                }\r\n                            }\r\n                            else {\r\n                                onExecutionFinished();\r\n                            }\r\n                        }.bind(this);\r\n                    executeLogic();\r\n                };\r\n\r\n                private startExecutionJoinLogic() {\r\n                    var join_query;\r\n                    if (this._currentQueryStackIndex >= 1 && this._currentQueryStackIndex % 2 === 1) {\r\n                        join_query = {\r\n                            Table: this._queryStack[this._currentQueryStackIndex].NextJoin.Table,\r\n                            Column: this._queryStack[this._currentQueryStackIndex].NextJoin.Column\r\n                        } as ITableJoin;\r\n                        this._currentQueryStackIndex++;\r\n                    }\r\n                    else {\r\n                        join_query = this._queryStack[this._currentQueryStackIndex++];\r\n                    }\r\n\r\n                    var query = this._queryStack[this._currentQueryStackIndex];\r\n                    if (query.JoinType === 'right') {\r\n                        this.executeRightJoin(join_query, query);\r\n                    }\r\n                    else if (query.Where) {\r\n                        this.executeWhereJoinLogic(join_query, query);\r\n                    }\r\n                    else {\r\n                        this.executeWhereUndefinedLogicForJoin(join_query, query);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class GroupByHelper extends Where {\r\n                constructor() {\r\n                    super();\r\n                }\r\n\r\n                protected processGroupBy = function () {\r\n                    var grp_qry = this._query.GroupBy,\r\n                        datas = this._results,\r\n                        look_up_obj = {};\r\n                    // free results memory\r\n                    this._results = this._query.GroupBy = undefined;\r\n                    if (typeof grp_qry === 'string') {\r\n                        for (var i in datas) {\r\n                            look_up_obj[datas[i][grp_qry]] = datas[i];\r\n                        }\r\n                    }\r\n                    else {\r\n                        var obj_key;\r\n                        for (var i in datas) {\r\n                            obj_key = \"\";\r\n                            for (var column in grp_qry) {\r\n                                obj_key += datas[i][grp_qry[column]];\r\n                            }\r\n                            look_up_obj[obj_key] = datas[i];\r\n                        }\r\n                    }\r\n                    // free datas memory\r\n                    datas = [];\r\n                    for (i in look_up_obj) {\r\n                        datas.push(look_up_obj[i]);\r\n                    }\r\n                    this._results = datas;\r\n                };\r\n\r\n                private executeAggregateGroupBy = function () {\r\n                    var grp_qry = this._query.GroupBy,\r\n                        datas = this._results,\r\n                        look_up_obj = {},\r\n                        // assign aggregate and free aggregate memory\r\n                        aggregate_qry = this._query.Aggregate;\r\n                    this._query.Aggregate = undefined;\r\n                    // free results memory\r\n                    this._results = undefined;\r\n\r\n                    var index, obj_Key, value, aggr_column;\r\n                    var calculateAggregate = function () {\r\n                        for (var prop in aggregate_qry) {\r\n                            switch (prop) {\r\n                                case 'Count':\r\n                                    var getCount = function () {\r\n                                        value = look_up_obj[obj_Key];\r\n                                        // get old value\r\n                                        value = value ? value[\"Count(\" + aggr_column + \")\"] : 0;\r\n                                        // add with old value if data exist\r\n                                        value += datas[index][aggr_column] ? 1 : 0;\r\n                                        return value;\r\n                                    };\r\n                                    if (typeof aggregate_qry[prop] === 'string') {\r\n                                        aggr_column = aggregate_qry[prop];\r\n                                        datas[index][\"Count(\" + aggr_column + \")\"] = getCount();\r\n                                    }\r\n                                    else if (Array.isArray(aggregate_qry[prop])) {\r\n                                        for (var item in aggregate_qry[prop]) {\r\n                                            aggr_column = aggregate_qry[prop][item];\r\n                                            datas[index][\"Count(\" + aggr_column + \")\"] = getCount();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case 'Max':\r\n                                    var getMax = function () {\r\n                                        value = look_up_obj[obj_Key];\r\n                                        // get old value\r\n                                        value = value ? value[\"Max(\" + aggr_column + \")\"] : 0;\r\n                                        datas[index][aggr_column] = datas[index][aggr_column] ?\r\n                                            datas[index][aggr_column] : 0;\r\n                                        // compare between old value and new value\r\n                                        return value > datas[index][aggr_column] ? value : datas[index][aggr_column];\r\n                                    };\r\n\r\n                                    if (typeof aggregate_qry[prop] === 'string') {\r\n                                        aggr_column = aggregate_qry[prop];\r\n                                        datas[index][\"Max(\" + aggr_column + \")\"] = getMax();\r\n                                    }\r\n                                    else if (Array.isArray(aggregate_qry[prop])) {\r\n                                        for (var item in aggregate_qry[prop]) {\r\n                                            aggr_column = aggregate_qry[prop][item];\r\n                                            datas[index][\"Max(\" + aggr_column + \")\"] = getMax();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case 'Min':\r\n                                    var getMin = function () {\r\n                                        value = look_up_obj[obj_Key];\r\n                                        // get old value\r\n                                        value = value ? value[\"Min(\" + aggr_column + \")\"] : Infinity;\r\n                                        datas[index][aggr_column] = datas[index][aggr_column] ?\r\n                                            datas[index][aggr_column] : Infinity;\r\n                                        // compare between old value and new value\r\n                                        return value < datas[index][aggr_column] ? value : datas[index][aggr_column];\r\n                                    };\r\n\r\n                                    if (typeof aggregate_qry[prop] === 'string') {\r\n                                        aggr_column = aggregate_qry[prop];\r\n                                        datas[index][\"Min(\" + aggr_column + \")\"] = getMin();\r\n                                    }\r\n                                    else if (Array.isArray(aggregate_qry[prop])) {\r\n                                        for (var item in aggregate_qry[prop]) {\r\n                                            aggr_column = aggregate_qry[prop][item];\r\n                                            datas[index][\"Min(\" + aggr_column + \")\"] = getMin();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case 'Sum':\r\n                                    var getSum = function () {\r\n                                        value = look_up_obj[obj_Key];\r\n                                        // get old value\r\n                                        value = value ? value[\"Sum(\" + aggr_column + \")\"] : 0;\r\n                                        // add with old value if data exist\r\n                                        value += datas[index][aggr_column] ? datas[index][aggr_column] : 0;\r\n                                        return value;\r\n                                    };\r\n                                    if (typeof aggregate_qry[prop] === 'string') {\r\n                                        aggr_column = aggregate_qry[prop];\r\n                                        datas[index][\"Sum(\" + aggr_column + \")\"] = getSum();\r\n                                    }\r\n                                    else if (Array.isArray(aggregate_qry[prop])) {\r\n                                        for (var item in aggregate_qry[prop]) {\r\n                                            aggr_column = aggregate_qry[prop][item];\r\n                                            datas[index][\"Sum(\" + aggr_column + \")\"] = getSum();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                case 'Avg':\r\n                                    var getAvg = function () {\r\n                                        value = look_up_obj[obj_Key];\r\n                                        // get old sum value\r\n                                        var sum_of_column = value ? value[\"Sum(\" + aggr_column + \")\"] : 0;\r\n                                        // add with old value if data exist\r\n                                        sum_of_column += datas[index][aggr_column] ? datas[index][aggr_column] : 0;\r\n                                        datas[index][\"Sum(\" + aggr_column + \")\"] = sum_of_column;\r\n                                        // get old count value\r\n                                        value = value ? value[\"Count(\" + aggr_column + \")\"] : 0;\r\n                                        // add with old value if data exist\r\n                                        value += datas[index][aggr_column] ? 1 : 0;\r\n                                        datas[index][\"Count(\" + aggr_column + \")\"] = value;\r\n                                    };\r\n\r\n                                    if (typeof aggregate_qry[prop] === 'string') {\r\n                                        aggr_column = aggregate_qry[prop];\r\n                                        getAvg();\r\n                                    }\r\n                                    else if (Array.isArray(aggregate_qry[prop])) {\r\n                                        for (var item in aggregate_qry[prop]) {\r\n                                            aggr_column = aggregate_qry[prop][item];\r\n                                            getAvg();\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    if (typeof grp_qry === 'string') {\r\n                        for (index in datas) {\r\n                            obj_Key = datas[index][grp_qry];\r\n                            calculateAggregate();\r\n                            look_up_obj[obj_Key] = datas[index];\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (index in datas) {\r\n                            obj_Key = \"\";\r\n                            for (var column in grp_qry) {\r\n                                obj_Key += datas[index][grp_qry[column]];\r\n                            }\r\n                            calculateAggregate();\r\n                            look_up_obj[obj_Key] = datas[index];\r\n                        }\r\n\r\n                    }\r\n                    // free datas memory\r\n                    datas = [];\r\n                    for (var i in look_up_obj) {\r\n                        datas.push(look_up_obj[i]);\r\n                    }\r\n                    // Checking for avg and if exist then fill the datas;\r\n                    if (aggregate_qry.Avg) {\r\n                        if (typeof aggregate_qry.Avg === 'string') {\r\n                            for (index in datas) {\r\n                                var sum_for_avg = datas[index][\"Sum(\" + aggregate_qry.Avg + \")\"],\r\n                                    count_for_avg = datas[index][\"Count(\" + aggregate_qry.Avg + \")\"];\r\n                                datas[index][\"Avg(\" + aggregate_qry.Avg + \")\"] = sum_for_avg / count_for_avg;\r\n                                if (aggregate_qry.Count !== aggregate_qry.Avg) {\r\n                                    delete datas[index][\"Count(\" + aggregate_qry.Avg + \")\"];\r\n                                }\r\n                                if (aggregate_qry.Sum !== aggregate_qry.Avg) {\r\n                                    delete datas[index][\"Sum(\" + aggregate_qry.Avg + \")\"];\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            var is_count_type_string = typeof aggregate_qry.Count,\r\n                                is_sum_type_string = typeof aggregate_qry.Count;\r\n                            for (index in datas) {\r\n                                for (var column in aggregate_qry.Avg) {\r\n                                    var avg_column = aggregate_qry.Avg[column],\r\n                                        sum = datas[index][\"Sum(\" + avg_column + \")\"],\r\n                                        count = datas[index][\"Count(\" + avg_column + \")\"];\r\n                                    datas[index][\"Avg(\" + avg_column + \")\"] = sum / count;\r\n\r\n                                    if (is_count_type_string) {\r\n                                        if (aggregate_qry.Count !== avg_column) {\r\n                                            delete datas[index][\"Count(\" + avg_column + \")\"];\r\n                                        }\r\n                                        else if (aggregate_qry.Count.indexOf(avg_column) === -1) {\r\n                                            delete datas[index][\"Count(\" + avg_column + \")\"];\r\n                                        }\r\n                                    }\r\n\r\n                                    if (is_sum_type_string) {\r\n                                        if (aggregate_qry.Sum !== avg_column) {\r\n                                            delete datas[index][\"Sum(\" + avg_column + \")\"];\r\n                                        }\r\n                                        else if (aggregate_qry.Sum.indexOf(avg_column) === -1) {\r\n                                            delete datas[index][\"Sum(\" + avg_column + \")\"];\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    this._results = datas;\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class Helper extends GroupByHelper {\r\n\r\n                constructor() {\r\n                    super();\r\n                }\r\n\r\n                processOrderBy = function () {\r\n                    var Order = this._query.Order;\r\n                    if (Order && this._results.length > 0 && !this._sorted && Order.By) {\r\n                        Order.Type = Order.Type ? Order.Type.toLowerCase() : 'asc';\r\n                        var order_column = Order.By,\r\n                            sortNumberInAsc = function () {\r\n                                this._results.sort(function (a, b) {\r\n                                    return a[order_column] - b[order_column];\r\n                                });\r\n                            }.bind(this),\r\n                            sortNumberInDesc = function () {\r\n                                this._results.sort(function (a, b) {\r\n                                    return b[order_column] - a[order_column];\r\n                                });\r\n                            }.bind(this),\r\n                            sortAlphabetInAsc = function () {\r\n                                this._results.sort(function (a, b) {\r\n                                    return a[order_column].toLowerCase().localeCompare(b[order_column].toLowerCase());\r\n                                });\r\n                            }.bind(this),\r\n                            sortAlphabetInDesc = function () {\r\n                                this._results.sort(function (a, b) {\r\n                                    return b[order_column].toLowerCase().localeCompare(a[order_column].toLowerCase());\r\n                                });\r\n                            }.bind(this);\r\n                        if (typeof this._results[0][order_column] === 'string') {\r\n                            if (Order.Type === 'asc') {\r\n                                sortAlphabetInAsc();\r\n                            }\r\n                            else {\r\n                                sortAlphabetInDesc();\r\n                            }\r\n                        }\r\n                        else if (typeof this._results[0][order_column] === 'number') {\r\n                            if (Order.Type === 'asc') {\r\n                                sortNumberInAsc();\r\n                            }\r\n                            else {\r\n                                sortNumberInDesc();\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                private processAggregateQry = function () {\r\n                    var datas = this._results,\r\n                        results = {},\r\n                        column_to_aggregate;\r\n                    // free results memory\r\n                    this._results = undefined;\r\n                    for (var prop in this._query.Aggregate) {\r\n                        switch (prop) {\r\n                            case 'Count':\r\n                                var getCount = function () {\r\n                                    var result = 0;\r\n                                    for (var i in datas) {\r\n                                        result += datas[i][column_to_aggregate] ? 1 : 0;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                if (typeof this._query.Aggregate[prop] === 'string') {\r\n                                    column_to_aggregate = this._query.Aggregate[prop];\r\n                                    results[\"Count(\" + column_to_aggregate + \")\"] = getCount();\r\n                                }\r\n                                else if (Array.isArray(this._query.Aggregate[prop])) {\r\n                                    for (var key in this._query.Aggregate[prop]) {\r\n                                        column_to_aggregate = this._query.Aggregate[prop][key];\r\n                                        results[\"Count(\" + column_to_aggregate + \")\"] = getCount();\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'Max':\r\n                                var getMax = function () {\r\n                                    var result = 0;\r\n                                    for (var i in datas) {\r\n                                        result = result > datas[i][column_to_aggregate] ?\r\n                                            result : datas[i][column_to_aggregate];\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                if (typeof this._query.Aggregate[prop] === 'string') {\r\n                                    column_to_aggregate = this._query.Aggregate[prop];\r\n                                    results[\"Max(\" + column_to_aggregate + \")\"] = getMax();\r\n                                }\r\n                                else if (Array.isArray(this._query.Aggregate[prop])) {\r\n                                    for (var key in this._query.Aggregate[prop]) {\r\n                                        column_to_aggregate = this._query.Aggregate[prop][key];\r\n                                        results[\"Max(\" + column_to_aggregate + \")\"] = getMax();\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'Min':\r\n                                var getMin = function () {\r\n                                    var result = Infinity, value = Infinity;\r\n                                    for (var i in datas) {\r\n                                        value = datas[i][column_to_aggregate] ?\r\n                                            datas[i][column_to_aggregate] : Infinity;\r\n                                        result = result < value ? result : value;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                if (typeof this._query.Aggregate[prop] === 'string') {\r\n                                    column_to_aggregate = this._query.Aggregate[prop];\r\n                                    results[\"Min(\" + column_to_aggregate + \")\"] = getMin();\r\n                                }\r\n                                else if (Array.isArray(this._query.Aggregate[prop])) {\r\n                                    for (var key in this._query.Aggregate[prop]) {\r\n                                        column_to_aggregate = this._query.Aggregate[prop][key];\r\n                                        results[\"Min(\" + column_to_aggregate + \")\"] = getMin();\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'Sum':\r\n                                var getSum = function () {\r\n                                    var result = 0;\r\n                                    for (var i in datas) {\r\n                                        result += datas[i][column_to_aggregate];\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                if (typeof this._query.Aggregate[prop] === 'string') {\r\n                                    column_to_aggregate = this._query.Aggregate[prop];\r\n                                    results[\"Sum(\" + column_to_aggregate + \")\"] = getSum();\r\n                                }\r\n                                else if (Array.isArray(this._query.Aggregate[prop])) {\r\n                                    for (var key in this._query.Aggregate[prop]) {\r\n                                        column_to_aggregate = this._query.Aggregate[prop][key];\r\n                                        results[\"Sum(\" + column_to_aggregate + \")\"] = getSum();\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case 'Avg':\r\n                                var getAvg = function () {\r\n                                    var result = 0;\r\n                                    for (var i in datas) {\r\n                                        result += datas[i][column_to_aggregate];\r\n                                    }\r\n                                    return result / datas.length;\r\n                                };\r\n                                if (typeof this._query.Aggregate[prop] === 'string') {\r\n                                    column_to_aggregate = this._query.Aggregate[prop];\r\n                                    results[\"Avg(\" + column_to_aggregate + \")\"] = getAvg();\r\n                                }\r\n                                else if (Array.isArray(this._query.Aggregate[prop])) {\r\n                                    for (var key in this._query.Aggregate[prop]) {\r\n                                        column_to_aggregate = this._query.Aggregate[prop][key];\r\n                                        results[\"Avg(\" + column_to_aggregate + \")\"] = getAvg();\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    // add results to the first index of result\r\n                    for (var prop in results) {\r\n                        datas[0][prop] = results[prop];\r\n                    }\r\n                    this._results = datas;\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Select {\r\n            export class Instance extends Helper {\r\n                constructor(query: ISelect, onSuccess: (results: any[]) => void, onError: (err: IError) => void) {\r\n                    super();\r\n                    this._onError = onError;\r\n                    if (this.getTable(query.From)) {\r\n                        this._onSuccess = onSuccess;\r\n                        this._query = query;\r\n                        this._skipRecord = this._query.Skip;\r\n                        this._limitRecord = this._query.Limit;\r\n                        this._tableName = this._query.From;\r\n                        try {\r\n                            if (query.Where) {\r\n                                if (Array.isArray(query.Where)) {\r\n                                    this.processWhereArrayQry();\r\n                                }\r\n                                else {\r\n                                    this.processWhere(false);\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.createTransaction();\r\n                                this.executeWhereUndefinedLogic();\r\n                            }\r\n                        }\r\n                        catch (ex) {\r\n                            this._errorOccured = true;\r\n                            this.onExceptionOccured.call(this, ex, { TableName: query.From });\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(\r\n                            new Error(Error_Type.TableNotExist, { TableName: query.From }).get(),\r\n                            true\r\n                        );\r\n                    }\r\n                }\r\n\r\n                private processWhereArrayQry = function () {\r\n                    var original_onsuccess = this._onSuccess,\r\n                        where_query = this._query.Where,\r\n                        output = [], operation,\r\n                        pKey = this.getPrimaryKey(this._query.From),\r\n                        isItemExist = function (keyValue) {\r\n                            var is_exist = false;\r\n                            output.every(function (item) {\r\n                                if (item[pKey] === keyValue) {\r\n                                    is_exist = true;\r\n                                    return false;\r\n                                }\r\n                                return true;\r\n                            });\r\n                            return is_exist;\r\n                        },\r\n                        createTransaction = function () {\r\n                            try {\r\n                                this._transaction = db_connection.transaction(\r\n                                    [this._query.From],\r\n                                    \"readonly\"\r\n                                );\r\n                                this._transaction.oncomplete = onSuccess;\r\n                                this._transaction.ontimeout = this.onTransactionTimeout.bind(this);\r\n                                this._objectStore = this._transaction.objectStore(this._query.From);\r\n                            }\r\n                            catch (ex) {\r\n                                this._errorOccured = true;\r\n                                this.onExceptionOccured.call(this, ex, { TableName: this._query.From });\r\n                            }\r\n                        }.bind(this),\r\n                        onSuccess = function () {\r\n                            if (operation === 'and') {\r\n                                if (output.length > 0) {\r\n                                    var and_results = [];\r\n                                    this._results.forEach(function (item) {\r\n                                        if (isItemExist(item[pKey])) {\r\n                                            and_results.push(item);\r\n                                        }\r\n                                    });\r\n                                    output = and_results;\r\n                                    and_results = null;\r\n                                }\r\n                                else {\r\n                                    output = this._results;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (output.length > 0) {\r\n                                    this._results = output.concat(this._results);\r\n                                    this.removeDuplicates();\r\n                                    output = this._results;\r\n                                }\r\n                                else {\r\n                                    output = this._results;\r\n                                }\r\n                            }\r\n                            this._results = [];\r\n                            if (where_query.length > 0) {\r\n                                processFirstQry();\r\n                            }\r\n                            else {\r\n                                original_onsuccess(output);\r\n                            }\r\n                        }.bind(this),\r\n                        processFirstQry = function () {\r\n                            this._query.Where = where_query.shift();\r\n                            if (this._query.Where['Or']) {\r\n                                if (Object.keys(this._query.Where).length === 1) {\r\n                                    operation = 'or';\r\n                                    this._query.Where = this._query.Where['Or'];\r\n                                    createTransaction();\r\n                                }\r\n                                else {\r\n                                    operation = 'and';\r\n                                    this._onSuccess = onSuccess;\r\n                                }\r\n                            }\r\n                            else {\r\n                                operation = 'and';\r\n                                createTransaction();\r\n                            }\r\n                            this.processWhere(true);\r\n                        }.bind(this);\r\n                    processFirstQry();\r\n                };\r\n\r\n                private createTransaction = function () {\r\n                    this._transaction = db_connection.transaction(\r\n                        [this._query.From].concat(this.getAtsTables(this.getAtsColumns())),\r\n                        \"readonly\"\r\n                    );\r\n                    this._transaction.oncomplete = this.onTransactionCompleted.bind(this);\r\n                    (this._transaction as any).ontimeout = this.onTransactionTimeout.bind(this);\r\n                    this._objectStore = this._transaction.objectStore(this._query.From);\r\n                };\r\n\r\n                private processWhere = function (isTransactionCreated) {\r\n                    if (this._query.Where.Or) {\r\n                        this.processOrLogic();\r\n                        this.createTransactionForOrLogic();\r\n                    }\r\n                    else if (!isTransactionCreated) {\r\n                        this.createTransaction();\r\n                    }\r\n                    this.goToWhereLogic();\r\n                };\r\n\r\n                private onTransactionCompleted = function () {\r\n                    if (this._sendResultFlag) {\r\n                        this.processOrderBy();\r\n                        if (this._query.Distinct) {\r\n                            var group_by = [];\r\n                            var result = this._results[0];\r\n                            for (var key in result) {\r\n                                group_by.push(key);\r\n                            }\r\n                            var primary_key = this.getPrimaryKey(this._query.From),\r\n                                index = group_by.indexOf(primary_key);\r\n                            group_by.splice(index, 1);\r\n                            this._query.GroupBy = group_by.length > 0 ? group_by : null;\r\n                        }\r\n                        if (this._query.GroupBy) {\r\n                            if (this._query.Aggregate) {\r\n                                this.executeAggregateGroupBy();\r\n                            }\r\n                            else {\r\n                                this.processGroupBy();\r\n                            }\r\n                        }\r\n                        else if (this._query.Aggregate) {\r\n                            this.processAggregateQry();\r\n                        }\r\n                        this._onSuccess(this._results);\r\n                    }\r\n                };\r\n\r\n                private createTransactionForOrLogic = function () {\r\n                    try {\r\n                        var table_list = [this._query.From];\r\n                        for (var prop in this._query.Where) {\r\n                            if (this._query.Where[prop].Like) {\r\n                                table_list = table_list.concat([this._query.From + \"_\" + prop]);\r\n                            }\r\n                        }\r\n                        this._transaction = db_connection.transaction(table_list, \"readonly\");\r\n                        this._transaction.oncomplete = this.orQuerySuccess.bind(this);\r\n                        this._transaction.ontimeout = this.onTransactionTimeout.bind(this);\r\n                        this._objectStore = this._transaction.objectStore(this._query.From);\r\n                    }\r\n                    catch (ex) {\r\n                        this._errorOccured = true;\r\n                        this.onExceptionOccured.call(this, ex, { TableName: this._query.From });\r\n                    }\r\n                };\r\n\r\n                private orQueryFinish = function () {\r\n                    this._results = (this as any)._orInfo.Results;\r\n                    // free or info memory\r\n                    (this as any)._orInfo.Results = undefined;\r\n                    this.removeDuplicates();\r\n                    (this as any)._orInfo.OnSucess(this._results);\r\n                };\r\n\r\n                private orQuerySuccess = function () {\r\n                    (this as any)._orInfo.Results = (this as any)._orInfo.Results.concat(this._results);\r\n                    if (!this._query.Limit || (this._query.Limit > (this as any)._orInfo.Results.length)) {\r\n                        this._results = [];\r\n                        var key = getObjectFirstKey((this as any)._orInfo.OrQuery);\r\n                        if (key != null) {\r\n                            var where = {};\r\n                            where[key] = (this as any)._orInfo.OrQuery[key];\r\n                            delete (this as any)._orInfo.OrQuery[key];\r\n                            this._query.Where = where;\r\n                            this.createTransactionForOrLogic();\r\n                            this.goToWhereLogic();\r\n                        }\r\n                        else {\r\n                            this.orQueryFinish();\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.orQueryFinish();\r\n                    }\r\n                };\r\n\r\n                private processOrLogic = function () {\r\n                    (this as any)._orInfo = {\r\n                        OrQuery: this._query.Where.Or,\r\n                        OnSucess: this._onSuccess,\r\n                        Results: []\r\n                    };\r\n                    // free or memory\r\n                    delete this._query.Where.Or;\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class BaseCount extends Base {\r\n                _resultCount: number = 0;\r\n                _skipRecord;\r\n                _limitRecord;\r\n                _checkFlag = false;\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class NotWhere extends BaseCount {\r\n                protected executeWhereUndefinedLogic = function () {\r\n                    if (this._objectStore.count) {\r\n                        var count_request = this._objectStore.count();\r\n                        count_request.onsuccess = function () {\r\n                            this._resultCount = count_request.result;\r\n                        }.bind(this);\r\n                        count_request.onerror = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        var cursor,\r\n                            cursor_request = this._objectStore.openCursor();\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                ++this._resultCount;\r\n                                (cursor as any).continue();\r\n                            }\r\n                        }.bind(this);\r\n                        cursor_request.onerror = function (e) {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(e);\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class In extends NotWhere {\r\n                private executeInLogic = function (column, values) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        column_store = this._objectStore.index(column),\r\n                        cursor_request;\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            ++this._resultCount;\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (this._objectStore.count) {\r\n                            for (var i = 0, length = values.length; i < length; i++) {\r\n                                if (!this._errorOccured) {\r\n                                    cursor_request = column_store.count(IDBKeyRange.only(values[i]));\r\n                                    cursor_request.onsuccess = function (e) {\r\n                                        this._resultCount += e.target.result;\r\n                                    }.bind(this);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            for (var i = 0, length = values.length; i < length; i++) {\r\n                                if (!this._errorOccured) {\r\n                                    cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                    cursor_request.onsuccess = function (e) {\r\n                                        cursor = e.target.result;\r\n                                        if (cursor) {\r\n                                            ++this._resultCount;\r\n                                            cursor.continue();\r\n                                        }\r\n                                    }.bind(this);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class Like extends In {\r\n                _compSymbol: Occurence;\r\n                _compValue;\r\n                _compValueLength: number;\r\n\r\n                protected executeLikeLogic = function (column, value, symbol: Occurence) {\r\n                    var cursor: IDBCursorWithValue;\r\n                    this._compValue = (value as string).toLowerCase();\r\n                    this._compValueLength = this._compValue.length;\r\n                    this._compSymbol = symbol;\r\n                    this.CursorOpenRequest = this._objectStore.index(column).openCursor();\r\n                    this.CursorOpenRequest.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                    if (this._checkFlag) {\r\n                        this.CursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    ++this._resultCount;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this.CursorOpenRequest.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    ++this._resultCount;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class Where extends Like {\r\n                private executeWhereLogic = function (column, value, op) {\r\n                    value = op ? value[op] : value;\r\n                    var cursor_request,\r\n                        cursor: IDBCursorWithValue;\r\n                    if (this._checkFlag) {\r\n                        cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this._whereChecker.check(cursor.value)) {\r\n                                    ++this._resultCount;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        if (this._objectStore.count) {\r\n                            cursor_request = this._objectStore.index(column).count(this.getKeyRange(value, op));\r\n                            cursor_request.onsuccess = function () {\r\n                                this._resultCount = cursor_request.result;\r\n                            }.bind(this);\r\n                        }\r\n                        else {\r\n                            cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n                            cursor_request.onsuccess = function (e) {\r\n                                cursor = e.target.result;\r\n                                if (cursor) {\r\n                                    ++this._resultCount;\r\n                                    cursor.continue();\r\n                                }\r\n                            }.bind(this);\r\n                        }\r\n                    }\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Count {\r\n            export class Instance extends Where {\r\n                constructor(query: ICount, onSuccess: (noOfRecord: number) => void, onError: (error: IError) => void) {\r\n                    super();\r\n                    this._onError = onError;\r\n                    if (this.getTable(query.From)) {\r\n                        this._onSuccess = onSuccess;\r\n                        this._query = query;\r\n                        try {\r\n                            var createTransaction = function () {\r\n                                this._transaction = db_connection.transaction([query.From], \"readonly\");\r\n                                this._objectStore = this._transaction.objectStore(query.From);\r\n                                this._transaction.oncomplete = this.onTransactionCompleted.bind(this);\r\n                                this._transaction.ontimeout = this.onTransactionTimeout.bind(this);\r\n                            };\r\n                            if (query.Where !== undefined) {\r\n                                if (query.Where.Or || Array.isArray(query.Where)) {\r\n                                    var select_object = new Select.Instance(query as any,\r\n                                        function (results) {\r\n                                            this._resultCount = results.length;\r\n                                            this.onTransactionCompleted();\r\n                                        }.bind(this), this._onError);\r\n                                }\r\n                                else {\r\n                                    createTransaction.call(this);\r\n                                    this.goToWhereLogic();\r\n                                }\r\n                            }\r\n                            else {\r\n                                createTransaction.call(this);\r\n                                this.executeWhereUndefinedLogic();\r\n                            }\r\n                        }\r\n                        catch (ex) {\r\n                            this.onExceptionOccured(ex, { TableName: query.From });\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(\r\n                            new Error(Error_Type.TableNotExist, { TableName: query.From }).get(),\r\n                            true\r\n                        );\r\n                    }\r\n                }\r\n\r\n                private onTransactionCompleted = function () {\r\n                    if (this._sendResultFlag) {\r\n                        this._onSuccess(this._resultCount);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export var updateValue = function (suppliedValue, storedValue) {\r\n                for (var key in suppliedValue) {\r\n                    if (typeof suppliedValue[key] !== 'object') {\r\n                        storedValue[key] = suppliedValue[key];\r\n                    }\r\n                    else {\r\n                        for (var op in suppliedValue[key]) {\r\n                            switch (op as any) {\r\n                                case '+': storedValue[key] += suppliedValue[key][op]; break;\r\n                                case '-': storedValue[key] -= suppliedValue[key][op]; break;\r\n                                case '*': storedValue[key] *= suppliedValue[key][op]; break;\r\n                                case '/': storedValue[key] /= suppliedValue[key][op]; break;\r\n                                default: storedValue[key] = suppliedValue[key];\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return storedValue;\r\n            };\r\n        }\r\n\r\n        export class BaseUpdate extends Base {\r\n            _checkFlag = false;\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class NotWhere extends BaseUpdate {\r\n\r\n                protected executeWhereUndefinedLogic = function () {\r\n                    var cursor,\r\n                        cursor_request = this._objectStore.openCursor();\r\n                    cursor_request.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor) {\r\n                            cursor.update(updateValue(this._query.Set, cursor.value));\r\n                            ++this._rowAffected;\r\n                            (cursor as any).continue();\r\n                        }\r\n\r\n                    }.bind(this);\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                };\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class In extends NotWhere {\r\n                private executeInLogic = function (column, values) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        column_store = this._objectStore.index(column),\r\n                        cursor_request;\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                            ++this._rowAffected;\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = column_store.openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                        ++this._rowAffected;\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class Like extends In {\r\n                _compSymbol: Occurence;\r\n                _compValue;\r\n                _compValueLength: number;\r\n\r\n                protected executeLikeLogic = function (column, value, symbol: Occurence) {\r\n                    var cursor: IDBCursorWithValue;\r\n                    this._compValue = (value as string).toLowerCase();\r\n                    this._compValueLength = this._compValue.length;\r\n                    this._compSymbol = symbol;\r\n                    var cursor_open_request = this._objectStore.index(column).openCursor();\r\n                    cursor_open_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n\r\n                    if (this._checkFlag) {\r\n                        cursor_open_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        cursor_open_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class Where extends Like {\r\n                private executeWhereLogic = function (column, value, op) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        cursor_request;\r\n                    value = op ? value[op] : value;\r\n                    cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n                    if (this._checkFlag) {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this._whereChecker.check(cursor.value)) {\r\n                                    cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                cursor.update(updateValue(this._query.Set, cursor.value));\r\n                                ++this._rowAffected;\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class Instance extends Where {\r\n                constructor(query: IUpdate, onSuccess: () => void, onError: (err: IError) => void) {\r\n                    super();\r\n                    this._onSuccess = onSuccess;\r\n                    this._onError = onError;\r\n                    try {\r\n                        this._error = new SchemaChecker(this.getTable(query.In)).check(query.Set, query.In);\r\n                        if (!this._error) {\r\n                            this._query = query;\r\n                            if (query.Where) {\r\n                                if (query.Where.Or || Array.isArray(query.Where)) {\r\n                                    this.executeComplexLogic();\r\n                                }\r\n                                else {\r\n                                    this.createTransaction();\r\n                                    this.goToWhereLogic();\r\n                                }\r\n                            }\r\n                            else {\r\n                                this.createTransaction();\r\n                                this.executeWhereUndefinedLogic();\r\n                            }\r\n                        }\r\n                        else {\r\n                            this._errorOccured = true;\r\n                            this.onErrorOccured(this._error, true);\r\n                        }\r\n                    }\r\n                    catch (ex) {\r\n                        this._errorOccured = true;\r\n                        this.onExceptionOccured.call(this, ex, { TableName: query.In });\r\n                    }\r\n                }\r\n\r\n                private onTransactionCompleted = function () {\r\n                    this._onSuccess(this._rowAffected);\r\n                };\r\n\r\n                private createTransaction = function () {\r\n                    this._transaction = db_connection.transaction([this._query.In], \"readwrite\");\r\n                    this._objectStore = this._transaction.objectStore(this._query.In);\r\n                    this._transaction.oncomplete = this.onTransactionCompleted.bind(this);\r\n                    (this._transaction as any).ontimeout = this.onTransactionTimeout;\r\n                };\r\n\r\n                private executeComplexLogic = function () {\r\n                    var select_object = new Select.Instance({\r\n                        From: this._query.In,\r\n                        Where: this._query.Where\r\n                    } as ISelect, function (results: any[]) {\r\n                        var key = this.getPrimaryKey(this._query.In),\r\n                            in_query = [],\r\n                            where_qry = {};\r\n                        results.forEach(function (value) {\r\n                            in_query.push(value[key]);\r\n                        });\r\n                        results = null;\r\n                        where_qry[key] = { In: in_query };\r\n                        this._query['Where'] = where_qry;\r\n                        this.createTransaction();\r\n                        this.goToWhereLogic();\r\n                    }.bind(this), this._onError.bind(this));\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Update {\r\n            export class SchemaChecker {\r\n                _table: Table;\r\n                constructor(table: Table) {\r\n                    this._table = table;\r\n                }\r\n\r\n                check = function (inValue, tblName) {\r\n                    var error: IError = null;\r\n                    if (typeof inValue === 'object') {\r\n                        if (this._table) {\r\n                            // loop through table column and find data is valid\r\n                            this._table._columns.every(function (column: Model.Column) {\r\n                                if (error === null) {\r\n                                    if (column._name in inValue) {\r\n                                        error = this.checkByColumn(column, inValue[column._name]);\r\n                                    }\r\n                                    return true;\r\n                                }\r\n                                else {\r\n                                    return false;\r\n                                }\r\n                            }, this);\r\n                        }\r\n                        else {\r\n                            error = new Error(\r\n                                Error_Type.TableNotExist,\r\n                                { TableName: tblName }\r\n                            ).get();\r\n                        }\r\n                    }\r\n                    else {\r\n                        error = new Error(Error_Type.NotObject).get();\r\n                    }\r\n                    return error;\r\n                };\r\n\r\n                private checkByColumn = function (column, value) {\r\n                    var error: IError = null;\r\n                    // check not null schema\r\n                    if (column._notNull && isNull(value)) {\r\n                        error = new Error(\r\n                            Error_Type.NullValue, { ColumnName: column._name }\r\n                        ).get();\r\n                    }\r\n\r\n                    // check datatype\r\n                    var type = typeof value;\r\n                    if (column._dataType) {\r\n                        if (type !== column._dataType && type !== 'object') {\r\n                            error = new Error(Error_Type.BadDataType,\r\n                                { ColumnName: column._name }\r\n                            ).get();\r\n                        }\r\n                    }\r\n\r\n                    // check allowed operators\r\n                    if (type === 'object') {\r\n                        var allowed_prop = ['+', '-', '*', '/'];\r\n                        for (var prop in value) {\r\n                            if (allowed_prop.indexOf(prop) < 0) {\r\n                                error = new Error(\r\n                                    Error_Type.InvalidOp,\r\n                                    { Op: prop }\r\n                                ).get();\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    return error;\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Delete {\r\n            export class BaseDelete extends Base {\r\n                _checkFlag = false;\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Delete {\r\n            export class NotWhere extends BaseDelete {\r\n                protected executeWhereUndefinedLogic = function () {\r\n                    var cursor,\r\n                        cursor_request = this._objectStore.openCursor();\r\n                    cursor_request.onsuccess = function (e) {\r\n                        cursor = e.target.result;\r\n                        if (cursor) {\r\n                            cursor.delete();\r\n                            ++this._rowAffected;\r\n                            (cursor as any).continue();\r\n                        }\r\n                    }.bind(this);\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Delete {\r\n            export class In extends NotWhere {\r\n                private executeInLogic = function (column, values) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        cursor_request;\r\n                    if (this._checkFlag) {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = this._objectStore.index(column).\r\n                                    openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        if (this._whereChecker.check(cursor.value)) {\r\n                                            cursor.delete();\r\n                                            ++this._rowAffected;\r\n                                        }\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0, length = values.length; i < length; i++) {\r\n                            if (!this._errorOccured) {\r\n                                cursor_request = this._objectStore.index(column).\r\n                                openCursor(IDBKeyRange.only(values[i]));\r\n                                cursor_request.onsuccess = function (e) {\r\n                                    cursor = e.target.result;\r\n                                    if (cursor) {\r\n                                        cursor.delete();\r\n                                        ++this._rowAffected;\r\n                                        cursor.continue();\r\n                                    }\r\n                                }.bind(this);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Delete {\r\n            export class Like extends In {\r\n                _compSymbol: Occurence;\r\n                _compValue;\r\n                _compValueLength: number;\r\n\r\n                protected executeLikeLogic = function (column, value, symbol: Occurence) {\r\n                    var cursor: IDBCursorWithValue;\r\n                    this._compValue = (value as string).toLowerCase();\r\n                    this._compValueLength = this._compValue.length;\r\n                    this._compSymbol = symbol;\r\n                    this.cursor_request = this._objectStore.index(column).openCursor();\r\n                    this.cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n\r\n                    if (this._checkFlag) {\r\n                        this.cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key) &&\r\n                                    this._whereChecker.check(cursor.value)) {\r\n                                    cursor.delete();\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        this.cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this.filterOnOccurence(cursor.key)) {\r\n                                    cursor.delete();\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                };\r\n\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Delete {\r\n            export class Where extends Like {\r\n                private executeWhereLogic = function (column, value, op) {\r\n                    var cursor: IDBCursorWithValue,\r\n                        cursor_request;\r\n                    value = op ? value[op] : value;\r\n                    cursor_request = this._objectStore.index(column).openCursor(this.getKeyRange(value, op));\r\n                    if (this._checkFlag) {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                if (this._whereChecker.check(cursor.value)) {\r\n                                    cursor.delete();\r\n                                    ++this._rowAffected;\r\n                                }\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n                    else {\r\n                        cursor_request.onsuccess = function (e) {\r\n                            cursor = e.target.result;\r\n                            if (cursor) {\r\n                                cursor.delete();\r\n                                ++this._rowAffected;\r\n                                cursor.continue();\r\n                            }\r\n                        }.bind(this);\r\n                    }\r\n\r\n                    cursor_request.onerror = function (e) {\r\n                        this._errorOccured = true;\r\n                        this.onErrorOccured(e);\r\n                    }.bind(this);\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Delete {\r\n            export class Instance extends Where {\r\n                constructor(\r\n                    query: IDelete, onSuccess: (recordDeleted: number) => void,\r\n                    onError: (err: IError) => void\r\n                ) {\r\n                    super();\r\n                    this._query = query;\r\n                    this._onSuccess = onSuccess;\r\n                    this._onError = onError;\r\n                    try {\r\n                        if (query.Where) {\r\n                            if (Array.isArray(query.Where)) {\r\n                                this.processWhereArrayQry();\r\n                            }\r\n                            else {\r\n                                this.processWhere(false);\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.createTransaction();\r\n                            this.executeWhereUndefinedLogic();\r\n                        }\r\n\r\n                    }\r\n                    catch (ex) {\r\n                        this._errorOccured = true;\r\n                        this.onExceptionOccured(ex, { TableName: query.From });\r\n                    }\r\n                }\r\n\r\n                private processWhereArrayQry = function () {\r\n                    var select_object = new Select.Instance(this._query as any,\r\n                        function (results) {\r\n                            var key_list = [],\r\n                                p_key = this.getPrimaryKey(this._query.From);\r\n                            results.forEach(function (item) {\r\n                                key_list.push(item[p_key]);\r\n                            });\r\n                            results = null;\r\n                            this._query.Where = {};\r\n                            this._query.Where[p_key] = { In: key_list };\r\n                            this.processWhere(false);\r\n                        }.bind(this), this._onError);\r\n                };\r\n\r\n                private processWhere = function (isTransactionCreated) {\r\n                    if (this._query.Where.Or) {\r\n                        this.processOrLogic();\r\n                        this.createTransactionForOrLogic();\r\n                    }\r\n                    else if (isTransactionCreated === false) {\r\n                        this.createTransaction();\r\n                    }\r\n                    this.goToWhereLogic();\r\n                };\r\n\r\n                private createTransaction = function () {\r\n                    this._transaction = db_connection.transaction([this._query.From], \"readwrite\");\r\n                    this._objectStore = this._transaction.objectStore(this._query.From);\r\n                    this._transaction.oncomplete = this.onTransactionCompleted.bind(this);\r\n                    this._transaction.onerror = this.onErrorOccured.bind(this);\r\n                };\r\n\r\n                private onTransactionCompleted = function () {\r\n                    this._onSuccess(this._rowAffected);\r\n                };\r\n\r\n                private createTransactionForOrLogic = function () {\r\n                    try {\r\n                        this._transaction = db_connection.transaction([this._query.From], \"readwrite\");\r\n                        this._transaction.oncomplete = this.orQuerySuccess.bind(this);\r\n                        (this._transaction).ontimeout = this.onTransactionTimeout.bind(this);\r\n                        this._objectStore = this._transaction.objectStore(this._query.From);\r\n                    }\r\n                    catch (ex) {\r\n                        this._errorOccured = true;\r\n                        this.onExceptionOccured(ex, { TableName: this._query.From });\r\n                    }\r\n                };\r\n\r\n                private orQuerySuccess = function () {\r\n                    var key = getObjectFirstKey((this as any)._orInfo.OrQuery);\r\n                    if (key != null) {\r\n                        var where = {};\r\n                        where[key] = (this as any)._orInfo.OrQuery[key];\r\n                        delete (this as any)._orInfo.OrQuery[key];\r\n                        this._query.Where = where;\r\n                        this.createTransactionForOrLogic();\r\n                        this.goToWhereLogic();\r\n                    }\r\n                    else {\r\n                        (this as any)._orInfo.OnSucess(this._rowAffected);\r\n                    }\r\n                };\r\n\r\n                private processOrLogic = function () {\r\n                    (this as any)._orInfo = {\r\n                        OrQuery: this._query.Where.Or,\r\n                        OnSucess: this._onSuccess\r\n                    };\r\n\r\n                    // free or memory\r\n                    delete this._query.Where.Or;\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Insert {\r\n            export class Instance extends Base {\r\n                _valuesAffected = [];\r\n                _query: IInsert;\r\n                _table: Table;\r\n                constructor(query: IInsert, onSuccess: (rowsInserted: number) => void, onError: (err: IError) => void) {\r\n                    super();\r\n                    this._onError = onError;\r\n                    var table = this.getTable(query.Into);\r\n                    if (table) {\r\n                        this._query = query;\r\n                        this._onSuccess = onSuccess;\r\n                        this._tableName = this._query.Into;\r\n                        try {\r\n                            if (this._query.SkipDataCheck) {\r\n                                this.insertData(this._query.Values);\r\n                            }\r\n                            else {\r\n                                var value_checker_obj = new ValuesChecker(table, this._query.Values);\r\n                                value_checker_obj.checkAndModifyValues(function (isError) {\r\n                                    if (isError) {\r\n                                        this.onErrorOccured(value_checker_obj._error, true);\r\n                                    }\r\n                                    else {\r\n                                        this.insertData(value_checker_obj._values);\r\n                                    }\r\n                                    value_checker_obj = undefined;\r\n                                }.bind(this));\r\n                            }\r\n                            // remove values from query\r\n                            this._query.Values = undefined;\r\n                        }\r\n                        catch (ex) {\r\n                            this.onExceptionOccured(ex, { TableName: query.Into });\r\n                        }\r\n                    }\r\n                    else {\r\n                        new Error(Error_Type.TableNotExist, { TableName: query.Into }).throw();\r\n                    }\r\n                }\r\n\r\n                public onTransactionCompleted = function () {\r\n                    this._onSuccess(this._query.Return ? this._valuesAffected : this._rowAffected);\r\n                };\r\n\r\n                private insertAtsDatas(values: any[], atsColumns: string[]) {\r\n                    if (atsColumns.length > 0) {\r\n                        var ats_column_index = 0,\r\n                            value_index = 0,\r\n                            ats_column_name = atsColumns[ats_column_index],\r\n                            key = this.getPrimaryKey(this._tableName),\r\n                            value,\r\n                            ats_value,\r\n                            insertDataIntoTable = function () {\r\n                                value = values[value_index++];\r\n                                if (value) {\r\n                                    ats_value = {};\r\n                                    ats_value[key] = value[key];\r\n                                    ats_value[ats_column_name] = this.getArrayFromWord(value[ats_column_name]);\r\n                                    var add_result = object_store.add(ats_value);\r\n                                    add_result.onerror = this.onErrorOccured.bind(this);\r\n                                    add_result.onsuccess = function (e) {\r\n                                        insertDataIntoTable.call(this);\r\n                                    }.bind(this);\r\n                                }\r\n                                else {\r\n                                    value_index = 0;\r\n                                    ++ats_column_index;\r\n                                    if (ats_column_index < atsColumns.length) {\r\n                                        ats_column_name = atsColumns[ats_column_index];\r\n                                        object_store = this._transaction.objectStore(\r\n                                            this._tableName + \"_\" + ats_column_name\r\n                                        );\r\n                                        insertDataIntoTable.call(this);\r\n                                    }\r\n                                }\r\n                            };\r\n                        var object_store = this._transaction.objectStore(this._tableName + \"_\" + ats_column_name);\r\n                        insertDataIntoTable.call(this);\r\n                    }\r\n                }\r\n\r\n                private insertData = function (values) {\r\n                    var value_index = 0,\r\n                        insertDataIntoTable: (value: object) => void;\r\n                    if (this._query.Return) {\r\n                        insertDataIntoTable = function (value) {\r\n                            if (value) {\r\n                                var add_result = object_store.add(value);\r\n                                add_result.onerror = this.onErrorOccured.bind(this);\r\n                                add_result.onsuccess = function (e) {\r\n                                    this._valuesAffected.push(value);\r\n                                    insertDataIntoTable.call(this, values[value_index++]);\r\n                                }.bind(this);\r\n                            }\r\n                            else {\r\n                                this.insertAtsDatas(values, ats_columns);\r\n                            }\r\n                        };\r\n                    }\r\n                    else {\r\n                        insertDataIntoTable = function (value) {\r\n                            if (value) {\r\n                                var add_result = object_store.add(value);\r\n                                add_result.onerror = this.onErrorOccured.bind(this);\r\n                                add_result.onsuccess = function (e) {\r\n                                    ++this._rowAffected;\r\n                                    insertDataIntoTable.call(this, values[value_index++]);\r\n                                }.bind(this);\r\n                            }\r\n                            else {\r\n                                this.insertAtsDatas(values, ats_columns);\r\n                            }\r\n                        };\r\n                    }\r\n                    var ats_columns = this.getAtsColumns();\r\n                    this._transaction = db_connection.transaction(\r\n                        [this._query.Into].concat(this.getAtsTables(ats_columns)), \"readwrite\");\r\n                    // this._transaction = db_connection.transaction([this._query.Into], \"readwrite\");\r\n                    var object_store = this._transaction.objectStore(this._query.Into);\r\n                    this._transaction.oncomplete = this.onTransactionCompleted.bind(this);\r\n                    insertDataIntoTable.call(this, values[value_index++]);\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Insert {\r\n            export class ValueChecker {\r\n                _table: Table;\r\n                _value: object;\r\n                _index: number;\r\n                _errorOccured: boolean = false;\r\n                _error: IError;\r\n                onFinish: () => void;\r\n                onError: (err: IError) => void;\r\n\r\n                constructor(table: Table, onFinish: () => void, onError: (err: IError) => void) {\r\n                    this._table = table;\r\n                    this.onFinish = onFinish;\r\n                    this.onError = onError;\r\n                }\r\n\r\n                public checkAndModifyValue = function (value) {\r\n                    this._value = value;\r\n                    this._index = 0;\r\n                    this.checkColumnValue();\r\n                };\r\n\r\n                private checkColumnValue = function () {\r\n                    var column = this._table._columns[this._index++];\r\n                    if (column) {\r\n                        this.checkAndModifyColumnValue(\r\n                            column,\r\n                            this._value\r\n                        );\r\n                    }\r\n                    else {\r\n                        this.onFinish();\r\n                    }\r\n                };\r\n\r\n                private checkAndModifyColumnValue = function (column: Column, value) {\r\n                    if (this._errorOccured === true) {\r\n                        this.onError(this._error);\r\n                    }\r\n                    else {\r\n                        var checkNotNullAndDataType = function () {\r\n                            // check not null schema\r\n                            if (column._notNull && isNull(value[column._name])) {\r\n                                this.onValidationError(Error_Type.NullValue, { ColumnName: column._name });\r\n                            }\r\n                            // check datatype\r\n                            else if (column._dataType && typeof value[column._name] !== column._dataType) {\r\n                                this.onValidationError(Error_Type.BadDataType, { ColumnName: column._name });\r\n                            }\r\n                            else { // check next column value\r\n                                this.checkColumnValue();\r\n                            }\r\n                        }.bind(this);\r\n                        var saveAutoIncrementValue = function () {\r\n                            var auto_increment_key =\r\n                                \"JsStore_\" + active_db._name + \"_\" + this._table._name + \"_\" + column._name + \"_Value\";\r\n                            KeyStore.get(\r\n                                auto_increment_key,\r\n                                function (columnValue: number) {\r\n                                    value[column._name] = ++columnValue;\r\n                                    KeyStore.set(\r\n                                        auto_increment_key,\r\n                                        columnValue\r\n                                    );\r\n                                    checkNotNullAndDataType();\r\n                                }\r\n                            );\r\n                        }.bind(this);\r\n\r\n                        // check auto increment scheme\r\n                        if (column._autoIncrement) {\r\n                            saveAutoIncrementValue();\r\n                        }\r\n                        // check Default Schema\r\n                        else if (column._default && isNull(value[column._name])) {\r\n                            value[column._name] = column._default;\r\n                            checkNotNullAndDataType();\r\n                        }\r\n                        else {\r\n                            checkNotNullAndDataType();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                private onValidationError = function (error: Error_Type, details: any) {\r\n                    this._errorOccured = true;\r\n                    this._error = new Error(error, details).get();\r\n                    this.onError(this._error);\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","namespace JsStore {\r\n    export namespace Business {\r\n        export namespace Insert {\r\n            export class ValuesChecker {\r\n                _table: Table;\r\n                _values: any[];\r\n                _index: number = 0;\r\n                _error: Error;\r\n                onFinish: (isError: boolean) => void;\r\n\r\n                constructor(table: Table, values: any[]) {\r\n                    this._table = table;\r\n                    this._values = values;\r\n                }\r\n\r\n                public checkAndModifyValues = function (onFinish: (isError: boolean) => void) {\r\n                    this.onFinish = onFinish;\r\n                    this.checkRowValue();\r\n                };\r\n\r\n                private checkRowValue = function () {\r\n                    var row_value = this._values[this._index];\r\n                    if (row_value) {\r\n                        var values_checker_obj = new ValueChecker(this._table, function () {\r\n                            this._values[this._index++] = values_checker_obj._value;\r\n                            this.checkRowValue();\r\n                        }.bind(this), function (err: IError) {\r\n                            this._error = err;\r\n                            this.onFinish(true);\r\n                        }.bind(this));\r\n                        values_checker_obj.checkAndModifyValue(row_value);\r\n                    }\r\n                    else {\r\n                        this.onFinish(false);\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    }\r\n}","declare var Promise: any;\r\nnamespace JsStore {\r\n    export var worker_status: WebWorker_Status = WebWorker_Status.NotStarted,\r\n        worker_instance: Worker;\r\n    export class CodeExecutionHelper {\r\n        private _requestQueue: IWebWorkerRequest[] = [];\r\n        private _isCodeExecuting = false;\r\n\r\n        protected pushApi = function (request: IWebWorkerRequest, usePromise: boolean) {\r\n            if (usePromise === true) {\r\n                return new Promise(function (resolve, reject) {\r\n                    request.OnSuccess = function (result) {\r\n                        resolve(result);\r\n                    };\r\n                    request.OnError = function (error) {\r\n                        reject(error);\r\n                    };\r\n                    this.prcoessExecutionOfCode(request);\r\n                }.bind(this));\r\n            }\r\n            else {\r\n                this.prcoessExecutionOfCode(request);\r\n                return this;\r\n            }\r\n        };\r\n\r\n        protected createWorker = function () {\r\n            try {\r\n                if (Worker) {\r\n                    var script_url = this.getScriptUrl();\r\n                    if (script_url && script_url.length > 0) {\r\n                        worker_instance = new Worker(script_url);\r\n                        worker_instance.onmessage = function (msg) {\r\n                            this.onMessageFromWorker(msg);\r\n                        }.bind(this);\r\n                        this.executeCodeUsingWorker({\r\n                            Name: 'change_log_status',\r\n                            Query: {\r\n                                logging: enable_log\r\n                            }\r\n                        } as IWebWorkerRequest);\r\n                        setTimeout(function () {\r\n                            if (worker_status !== WebWorker_Status.Failed) {\r\n                                worker_status = WebWorker_Status.Registered;\r\n                            }\r\n                            if (status.ConStatus === Connection_Status.Connected) {\r\n                                this.executeCode();\r\n                            }\r\n                        }.bind(this), 100);\r\n                    }\r\n                    else {\r\n                        this.onWorkerFailed();\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    this.onWorkerFailed();\r\n                }\r\n            }\r\n            catch (ex) {\r\n                this.onWorkerFailed();\r\n            }\r\n        };\r\n\r\n        private prcoessExecutionOfCode = function (request: IWebWorkerRequest) {\r\n            if (status.ConStatus === Connection_Status.NotStarted) {\r\n                switch (request.Name) {\r\n                    case 'create_db':\r\n                    case 'open_db':\r\n                        this._requestQueue.splice(0, 0, request);\r\n                        if (worker_status !== WebWorker_Status.NotStarted) {\r\n                            this.executeCode();\r\n                        }\r\n                        status.ConStatus = Connection_Status.Connected;\r\n                        break;\r\n                    default: this._requestQueue.push(request);\r\n                }\r\n            }\r\n            else {\r\n                this._requestQueue.push(request);\r\n                if (this._requestQueue.length === 1 && worker_status !== WebWorker_Status.NotStarted) {\r\n                    this.executeCode();\r\n                }\r\n            }\r\n            log(\"request pushed: \" + request.Name);\r\n        };\r\n\r\n        private executeCode = function () {\r\n            if (!this._isCodeExecuting && this._requestQueue.length > 0) {\r\n                this._isCodeExecuting = true;\r\n                var first_request = this._requestQueue[0],\r\n                    request = {\r\n                        Name: first_request.Name,\r\n                        Query: first_request.Query\r\n                    } as IWebWorkerRequest;\r\n                log(\"request executing : \" + first_request.Name);\r\n                if (worker_status === WebWorker_Status.Registered) {\r\n                    this.executeCodeUsingWorker(request);\r\n                } else {\r\n                    this.executeCodeDirect(request);\r\n                }\r\n            }\r\n        };\r\n\r\n        private executeCodeDirect = function (request: IWebWorkerRequest) {\r\n            new Business.Main(function (results) {\r\n                this.processFinishedRequest(results);\r\n            }.bind(this)).checkConnectionAndExecuteLogic(request);\r\n        };\r\n\r\n        private executeCodeUsingWorker = function (request: IWebWorkerRequest) {\r\n            worker_instance.postMessage(request);\r\n        };\r\n\r\n        private processFinishedRequest = function (message: IWebWorkerResult) {\r\n            var finished_request: IWebWorkerRequest = this._requestQueue.shift();\r\n            this._isCodeExecuting = false;\r\n            if (finished_request) {\r\n                log(\"request finished : \" + finished_request.Name);\r\n                if (message.ErrorOccured) {\r\n                    if (finished_request.OnError) {\r\n                        finished_request.OnError(message.ErrorDetails);\r\n                    }\r\n                }\r\n                else {\r\n                    if (finished_request.OnSuccess) {\r\n                        finished_request.OnSuccess(message.ReturnedValue);\r\n                    }\r\n                }\r\n                this.executeCode();\r\n            }\r\n        };\r\n\r\n        private onWorkerFailed = function () {\r\n            console.warn('JsStore is not runing in web worker');\r\n            worker_status = WebWorker_Status.Failed;\r\n            if (status.ConStatus === Connection_Status.NotStarted) {\r\n                this.executeCode();\r\n            }\r\n        };\r\n\r\n        private getScriptUrl(fileName: string) {\r\n            var script_url = \"\";\r\n            var file_name = fileName ? fileName.toLowerCase() : \"jsstore\";\r\n            var scripts = document.getElementsByTagName('script');\r\n            for (var i = scripts.length - 1, url = \"\"; i >= 0; i--) {\r\n                url = scripts[i].src;\r\n                url = url.substring(url.lastIndexOf('/') + 1).toLowerCase();\r\n                if (url.length > 0 && url.indexOf(file_name) >= 0) {\r\n                    script_url = scripts[i].src;\r\n                    return script_url;\r\n                }\r\n            }\r\n            return script_url;\r\n        }\r\n\r\n        private onMessageFromWorker = function (msg) {\r\n            if (typeof msg.data === 'string') {\r\n                var datas = msg.data.split(':')[1];\r\n                switch (datas) {\r\n                    case 'WorkerFailed': this.onWorkerFailed();\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                this.processFinishedRequest(msg.data);\r\n            }\r\n        };\r\n    }\r\n}\r\n","import Model = JsStore.Model;\r\nimport DataBase = Model.DataBase;\r\nimport Column = Model.Column;\r\nimport Table = Model.Table;\r\n\r\nnamespace JsStore {\r\n    export class Instance extends CodeExecutionHelper {\r\n        constructor(dbName = null) {\r\n            super();\r\n            if (worker_status === WebWorker_Status.Registered) {\r\n                worker_instance.terminate();\r\n            }\r\n            else if (worker_status === WebWorker_Status.NotStarted) {\r\n                KeyStore.init();\r\n            }\r\n            this.createWorker();\r\n            if (dbName) {\r\n                this.openDb(dbName, null, null);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * open database\r\n         * \r\n         * @param {string} dbName \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        openDb = function (dbName: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n            return this.pushApi({\r\n                Name: 'open_db',\r\n                Query: dbName,\r\n                OnSuccess: onSuccess,\r\n                OnError: onError,\r\n            } as IWebWorkerRequest, false);\r\n        };\r\n\r\n        /**\r\n         * creates DataBase\r\n         * \r\n         * @param {Model.IDataBase} dataBase \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        createDb = function (\r\n            dataBase: IDataBaseOption, onSuccess: (dbSchema: any) => void, onError: (err: IError) => void) {\r\n            return this.pushApi({\r\n                Name: 'create_db',\r\n                OnSuccess: onSuccess,\r\n                OnError: onError,\r\n                Query: dataBase\r\n            } as IWebWorkerRequest, false);\r\n        };\r\n\r\n        /**\r\n         * drop dataBase\r\n         * \r\n         * @param {Function} onSuccess \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        dropDb = function (onSuccess: () => void, onError: (err: IError) => void) {\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'drop_db',\r\n                Query: null,\r\n                OnSuccess: onSuccess,\r\n                OnError: onError\r\n            } as IWebWorkerRequest, use_promise);\r\n        };\r\n\r\n        /**\r\n         * select data from table\r\n         * \r\n         * @param {IQuery} query \r\n         * @param {Function} [onSuccess=null]  \r\n         * @param {Function} [onError=null] \r\n         * \r\n         * @memberOf Main\r\n         */\r\n        select = function (query: ISelect, onSuccess: (results: any[]) => void, onError: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'select',\r\n                Query: query,\r\n                OnSuccess: onSuccess,\r\n                OnError: onError\r\n            } as IWebWorkerRequest, use_promise);\r\n        };\r\n\r\n        /**\r\n         * get no of result from table\r\n         * \r\n         * @param {ICount} query \r\n         * @param {Function} [onSuccess=null]  \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        count = function (query: ICount, onSuccess: (noOfRecord: number) => void, onError: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'count',\r\n                Query: query,\r\n                OnSuccess: onSuccess,\r\n                OnError: onError\r\n            } as IWebWorkerRequest, use_promise);\r\n        };\r\n\r\n        /**\r\n         * insert data into table\r\n         * \r\n         * @param {IInsert} query \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        insert = function\r\n        (query: IInsert, onSuccess: (recordInserted: number) => void, onError: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'insert',\r\n                Query: query,\r\n                OnSuccess: onSuccess,\r\n                OnError: onError\r\n            } as IWebWorkerRequest, use_promise);\r\n        };\r\n\r\n        /**\r\n         * update data into table\r\n         * \r\n         * @param {IUpdate} query \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        update = function (query: IUpdate, onSuccess: (recordUpdated: number) => void, onError: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'update',\r\n                Query: query,\r\n                OnSuccess: onSuccess,\r\n                OnError: onError\r\n            } as IWebWorkerRequest, use_promise);\r\n        };\r\n\r\n        /**\r\n         * delete data from table\r\n         * \r\n         * @param {IDelete} query \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} onError \r\n         * @memberof Instance\r\n         */\r\n        delete = function (query: IDelete, onSuccess: (recordDeleted: number) => void, onError: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            query.OnSuccess = query.OnError = null;\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'delete',\r\n                Query: query,\r\n                OnSuccess: onSuccess,\r\n                OnError: onError\r\n            } as IWebWorkerRequest, use_promise);\r\n        };\r\n\r\n        /**\r\n         * delete all data from table\r\n         * \r\n         * @param {string} tableName \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @memberof Instance\r\n         */\r\n        clear = function (tableName: string, onSuccess: () => void, onError: (err: IError) => void) {\r\n            var use_promise = onSuccess ? false : true;\r\n            return this.pushApi({\r\n                Name: 'clear',\r\n                Query: tableName,\r\n                OnSuccess: onSuccess,\r\n                OnError: onError\r\n            } as IWebWorkerRequest, use_promise);\r\n        };\r\n\r\n        /**\r\n         * insert bulk amount of data\r\n         * \r\n         * @param {IInsert} query \r\n         * @param {Function} [onSuccess=null] \r\n         * @param {Function} [onError=null] \r\n         * @returns \r\n         * @memberof Instance\r\n         */\r\n        bulkInsert = function (query: IInsert, onSuccess: () => void, onError: (err: IError) => void) {\r\n            onSuccess = query.OnSuccess ? query.OnSuccess as any : onSuccess;\r\n            onError = query.OnError ? query.OnError : onError;\r\n            var use_promise = onSuccess ? false : true;\r\n            query.OnSuccess = query.OnError = null;\r\n            return this.pushApi({\r\n                Name: 'bulk_insert',\r\n                Query: query,\r\n                OnSuccess: onSuccess,\r\n                OnError: onError\r\n            } as IWebWorkerRequest, use_promise);\r\n        };\r\n\r\n        /**\r\n         * export the result in json file\r\n         * \r\n         * @param {ISelect} qry \r\n         * @memberof Instance\r\n         */\r\n        exportJson = function (query: ISelect) {\r\n            var onSuccess = function (url) {\r\n                var link = document.createElement(\"a\");\r\n                link.href = url;\r\n                link.download = query.From + \".json\";\r\n                link.click();\r\n                if (onSuccessCallBack) {\r\n                    onSuccessCallBack(null);\r\n                }\r\n            },\r\n                onError = query['OnError'],\r\n                onSuccessCallBack = query['OnSuccess'];\r\n            query['OnSuccess'] = query['OnError'] = undefined;\r\n            var use_promise = onSuccessCallBack ? false : true;\r\n            if (use_promise) {\r\n                return new Promise(function (resolve, reject) {\r\n                    this.pushApi({\r\n                        Name: 'export_json',\r\n                        Query: query,\r\n                        OnSuccess: onSuccess,\r\n                        OnError: onError\r\n                    } as IWebWorkerRequest, use_promise).then(function (url) {\r\n                        onSuccess(url);\r\n                        resolve();\r\n                    }).catch(function (err) {\r\n                        reject(err);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.pushApi({\r\n                    Name: 'export_json',\r\n                    Query: query,\r\n                    OnSuccess: onSuccess,\r\n                    OnError: onError\r\n                } as IWebWorkerRequest, use_promise);\r\n            }\r\n\r\n        };\r\n    }\r\n}\r\n","if (self && !self.alert) {\r\n    self.onmessage = function (e) {\r\n        JsStore.log(\"Request executing from WebWorker, request name: \" + e.data.Name);\r\n        var request = e.data,\r\n            business_main = new JsStore.Business.Main();\r\n        business_main.checkConnectionAndExecuteLogic(request);\r\n    };\r\n    JsStore.worker_status = JsStore.WebWorker_Status.Registered;\r\n    KeyStore.init();\r\n}"]}